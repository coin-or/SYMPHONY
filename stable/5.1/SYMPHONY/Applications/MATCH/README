******************************************************************************
*                     SYMPHONY MATCH Application                             * 
******************************************************************************

The SYMPHONY MATCH application solves the standard matching problem. This
application is intended as an illustration of how to develop an application
with SYMPHONY. For a more detailed walkthrough of the development of this
solver, please see SYMPHONY/Doc/Walkthrough.pdf. See below for usage.

******************************************************************************
*                              INSTALLATION                                  *
******************************************************************************

Please see the INSTALL file for a guide to compile SYMPHONY MATCH application.

*******************************************************************************
*                      USING THE SOLVER                                       *
*******************************************************************************

Using the matching problem (MATCH), we try to pair the nodes(persons,jobs,etc)
with minimum cost. By pairing, we mean that each node is matched with exactly
one other node in return for a cost. The data file consists of a symmetric,
square matrix with rows and columns both representing the nodes and with the
cost entities of pairing the corresponding rows and columns. Note that the
diagonal of this matrix should be zero.

To execute the MATCH application, just specify the location of the data file
by typing "-F 'filename'" as an argument after the executable name. There is a
sample file called sample.mat that you can try to make sure the solver is
working. More data files may become available. Please check
http://www.branchandcut.org/MATCH/ for more information. The other user
defined parameters are the following:

		-H: help (user switches)
		-F file: problem instance data is in 'file'

You can also obtain the above list by tying the executable name followed by
"-H". There are a number of other (for now) undocumented parameters that can
be used to fine-tune the performance of the solver. These must be set in a
parameter file. The SYMPHONY User's Manual explains the use of the parameter
file.

Some of SYMPHONY's native parameters can also be set on the command
line. Below is a list of these parameters. This list can also be obtained by
typing the executable name with no command-line arguments. Note that all
SYMPHONY parameters are denoted by a lowercase letter. Note that there are
dozens of other parameters that can be set with the use of a parameter
file. These parameters are listed in the SYMPHONY User's Manual.

		-h: help
        	-a: no cut timeout
        	-d: enable graph drawing
        	-g: use cut generator
        	-r: do repricing in root
        	-t: trim the tree
        	-b: don't perform branch and cut
        	-u ub: use upper bound 'ub'
        	-p procs: allow 'procs' active nodes
        	-n i: use node selection rule 'i'
        	-v i: set verbosity to level 'i'
        	-s cands: use 'cands' candidates for strong branching
        	-c i: use rule 'i' to compare candidates
        	-k i: use rule 'i' to select child
        	-m n: allow a max of 'n' cuts to enter per iteration
        	-e n: allow a max of 'n' cut pools
        	-l n k: load balance level 'n' and iterations 'k'
        	-i n: allow a max of 'n' iterations in presolve
        	-z n: set diving threshold to 'n'
        	-f file: read parameters from parameter file 'file'

AUTHORS

The SYMPHONY MATCH application was developed by Michael Trick
(trick@cmu.edu).

BUG REPORTS

Please send bug reports to symphony-bugs@branchandcut.org.
