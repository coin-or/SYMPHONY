# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright (C) 2006 International Business Machines and others.
# All Rights Reserved.
# This file is distributed under the Common Public License.

# Authors: Ted Ralphs, Menal Guzelsoy           


srcdir = @srcdir@
top_srcdir = @top_srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@SYM_COMPILE_IN_LP_TRUE@am__append_1 = lp_solver.c lp_varfunc.c \
@SYM_COMPILE_IN_LP_TRUE@	lp_rowfunc.c lp_genfunc.c \
@SYM_COMPILE_IN_LP_TRUE@	lp_proccomm.c lp_wrapper.c lp_free.c
@PSEUDO_COSTS_TRUE@@SYM_COMPILE_IN_LP_TRUE@am__append_2 = lp_pseudo_branch.c
@PSEUDO_COSTS_FALSE@@SYM_COMPILE_IN_LP_TRUE@am__append_3 = lp_branch.c
@SYM_COMPILE_IN_CG_TRUE@@SYM_COMPILE_IN_LP_TRUE@am__append_4 = cg_func.c cg_wrapper.c
@SYM_COMPILE_IN_LP_FALSE@am__append_5 = lp_solver.c
@SYM_COMPILE_IN_CP_TRUE@am__append_6 = cp_proccomm.c cp_func.c cp_wrapper.c
@SYM_COMPILE_IN_TM_TRUE@am__append_7 = $(TM_SRC)
@PSEUDO_COSTS_TRUE@am__append_8 = lp_pseudo_branch.c
@PSEUDO_COSTS_FALSE@am__append_9 = lp_branch.c
@SYM_COMPILE_IN_CG_TRUE@am__append_10 = cg_func.c cg_wrapper.c
@SYM_COMPILE_IN_LP_TRUE@am__append_11 = $(QSORT_SRC)
@USE_CGL_CUTS_TRUE@am__append_12 = $(CGLOBJDIR)/src/libCgl.la
@USE_CGL_CUTS_TRUE@am__append_13 = \
@USE_CGL_CUTS_TRUE@	`cat $(CGLOBJDIR)/cgl_addlibs.txt`


# List all additionally required solver and Osi libraries
@CLP_LP_SOLVER_TRUE@am__append_14 = -I`$(CYGPATH_W) $(CLPSRCDIR)/src` \
@CLP_LP_SOLVER_TRUE@	-I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiClp` \
@CLP_LP_SOLVER_TRUE@	-I`$(CYGPATH_W) $(CLPOBJDIR)/inc` \
@CLP_LP_SOLVER_TRUE@	-D__OSI_CLP__
@CLP_LP_SOLVER_TRUE@am__append_15 = $(OSIOBJDIR)/src/OsiClp/libOsiClp.la \
@CLP_LP_SOLVER_TRUE@	$(CLPOBJDIR)/src/libClp.la

@CLP_LP_SOLVER_TRUE@am__append_16 = `cat $(CLPOBJDIR)/clp_addlibs.txt`
@CPLEX_LP_SOLVER_TRUE@am__append_17 = -I`$(CYGPATH_W) $(CPXINCDIR)` \
@CPLEX_LP_SOLVER_TRUE@	-I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiCpx` \
@CPLEX_LP_SOLVER_TRUE@	-D__OSI_CPLEX__
@CPLEX_LP_SOLVER_TRUE@am__append_18 = $(OSIOBJDIR)/src/OsiCpx/libOsiCpx.la
@GLPK_LP_SOLVER_TRUE@am__append_19 = -I`$(CYGPATH_W) $(GLPKINCDIR)` \
@GLPK_LP_SOLVER_TRUE@	-I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiGlpk` \
@GLPK_LP_SOLVER_TRUE@	-D__OSI_GLPK__
@GLPK_LP_SOLVER_TRUE@am__append_20 = $(OSIOBJDIR)/src/OsiGlpk/libOsiGlpk.la 
@GLPK_LP_SOLVER_FALSE@@USE_GMPL_TRUE@am__append_21 = -I`$(CYGPATH_W) $(GLPKINCDIR)`
@OSL_LP_SOLVER_TRUE@am__append_22 = -I`$(CYGPATH_W) $(OSLINCDIR)` \
@OSL_LP_SOLVER_TRUE@	-I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiOsl` \
@OSL_LP_SOLVER_TRUE@	-D__OSI_OSL__
@OSL_LP_SOLVER_TRUE@am__append_23 = $(OSIOBJDIR)/src/OsiOsl/libOsiOsl.la
@SOPLEX_LP_SOLVER_TRUE@am__append_24 = -I`$(CYGPATH_W) $(SPXINCDIR)` \
@SOPLEX_LP_SOLVER_TRUE@	-I`$(CYGPATH_W) \
@SOPLEX_LP_SOLVER_TRUE@	$(OSISRCDIR)/src/OsiSpx` -D__OSI_SPX__
@SOPLEX_LP_SOLVER_TRUE@am__append_25 = $(OSIOBJDIR)/src/OsiSpx/libOsiSpx.la
@XPRESS_LP_SOLVER_TRUE@am__append_26 = -I`$(CYGPATH_W) $(XPRINCDIR)` \
@XPRESS_LP_SOLVER_TRUE@	-I`$(CYGPATH_W) \
@XPRESS_LP_SOLVER_TRUE@	$(OSISRCDIR)/src/OsiXpr` \
@XPRESS_LP_SOLVER_TRUE@	-D__OSI_XPRESS__
@XPRESS_LP_SOLVER_TRUE@am__append_27 = $(OSIOBJDIR)/src/OsiXpr/libOsiXpr.la
@SYM_PARALLEL_TRUE@am__append_28 = -I`$(CYGPATH_W) $(PVM_ROOT)/include`
@SYM_PARALLEL_TRUE@am__append_29 = -L$(PVM_ROOT)/lib/$(ARCH) -lgpvm3 -lpvm3
#	-I`$(CYGPATH_W) $(srcdir)/GMPL`

########################################################################
#                            Additional Definitions                    #
########################################################################
@COIN_HAS_READLINE_TRUE@am__append_30 = -DHAS_READLINE
@SENSITIVITY_ANALYSIS_TRUE@am__append_31 = -DSENSITIVITY_ANALYSIS
@USE_CGL_CUTS_TRUE@am__append_32 = -DUSE_CGL_CUTS
@USE_OSI_INTERFACE_TRUE@am__append_33 = 
@ROOT_NODE_ONLY_TRUE@am__append_34 = -DROOT_NODE_ONLY

#if CCMALLOC
#AM_CPPFLAGS += 
#endif
@COMPILE_FRAC_BRANCHING_TRUE@am__append_35 = -DCOMPILE_FRAC_BRANCHING
@DO_TESTS_TRUE@am__append_36 = -DDO_TESTS
@TM_BASIS_TESTS_TRUE@am__append_37 = -DTM_BASIS_TESTS
@TRACE_PATH_TRUE@am__append_38 = -DTRACE_PATH
@CHECK_CUT_VALIDITY_TRUE@am__append_39 = -DCHECK_CUT_VALIDITY
@STATISTICS_TRUE@am__append_40 = -DSTATISTICS
@PSEUDO_COSTS_TRUE@am__append_41 = -DPSEUDO_COSTS
@DRAWGRAPH_TRUE@am__append_42 = 

#FIXME For now, assume that we have gmpl files, later check for GLPK package
@USE_GMPL_TRUE@am__append_43 = -DUSE_GLPMPL
EXTRA_PROGRAMS = symphony$(EXEEXT) symphony_m_tm$(EXEEXT) \
	symphony_m_tm_lp$(EXEEXT) symphony_m_tm_cp$(EXEEXT) \
	symphony_m_tm_lp_cg$(EXEEXT) symphony_m_tm_lp_cg_cp$(EXEEXT) \
	symphony_cp$(EXEEXT) symphony_lp$(EXEEXT) \
	symphony_lp_cg$(EXEEXT) symphony_lp_cg_cp$(EXEEXT) \
	symphony_tm$(EXEEXT) symphony_tm_cp$(EXEEXT) \
	symphony_tm_lp$(EXEEXT) symphony_tm_lp_cg$(EXEEXT) \
	symphony_tm_lp_cg_cp$(EXEEXT)
bin_PROGRAMS = $(am__EXEEXT_1)

########################################################################
#                Application Library                                   #    
########################################################################
@SYM_WITH_APPL_TRUE@am__append_44 = libSymAppl.la
@SYM_DEBUG_TRUE@am__append_45 = -g
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config_sym.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libSym_la_LIBADD =
am__libSym_la_SOURCES_DIST = SymConfig.h BB_constants.h BB_macros.h \
	BB_types.h cg.h cg_params.h cg_u.h cp.h cp_params.h cp_u.h \
	dg.h dg_params.h dg_u.h lp.h lp_params.h lp_solver.h lp_u.h \
	master.h master_params.h master_u.h messages.h pack_array.h \
	pack_cut.h proccomm.h proto.h qsortucb.h return_values.h \
	symphony_api.h timemeas.h tm.h tm_params.h master.c \
	master_wrapper.c master_io.c master_func.c lp_solver.c \
	treemanager.c tm_func.c tm_proccomm.c lp_varfunc.c \
	lp_rowfunc.c lp_genfunc.c lp_proccomm.c lp_wrapper.c lp_free.c \
	lp_pseudo_branch.c lp_branch.c cg_func.c cg_wrapper.c \
	cp_proccomm.c cp_func.c cp_wrapper.c timemeas.c qsortucb.c \
	qsortucb_i.c qsortucb_ii.c qsortucb_id.c qsortucb_di.c \
	qsortucb_ic.c proccomm.c pack_cut.c pack_array.c
am__objects_1 =
@SYM_COMPILE_IN_LP_FALSE@am__objects_2 = lp_solver.lo
@SYM_COMPILE_IN_LP_TRUE@am__objects_3 = lp_solver.lo lp_varfunc.lo \
@SYM_COMPILE_IN_LP_TRUE@	lp_rowfunc.lo lp_genfunc.lo \
@SYM_COMPILE_IN_LP_TRUE@	lp_proccomm.lo lp_wrapper.lo \
@SYM_COMPILE_IN_LP_TRUE@	lp_free.lo
@PSEUDO_COSTS_TRUE@@SYM_COMPILE_IN_LP_TRUE@am__objects_4 = lp_pseudo_branch.lo
@PSEUDO_COSTS_FALSE@@SYM_COMPILE_IN_LP_TRUE@am__objects_5 =  \
@PSEUDO_COSTS_FALSE@@SYM_COMPILE_IN_LP_TRUE@	lp_branch.lo
@SYM_COMPILE_IN_CG_TRUE@@SYM_COMPILE_IN_LP_TRUE@am__objects_6 =  \
@SYM_COMPILE_IN_CG_TRUE@@SYM_COMPILE_IN_LP_TRUE@	cg_func.lo \
@SYM_COMPILE_IN_CG_TRUE@@SYM_COMPILE_IN_LP_TRUE@	cg_wrapper.lo
@SYM_COMPILE_IN_CP_TRUE@am__objects_7 = cp_proccomm.lo cp_func.lo \
@SYM_COMPILE_IN_CP_TRUE@	cp_wrapper.lo
@SYM_COMPILE_IN_TM_FALSE@am__objects_8 = treemanager.lo tm_func.lo \
@SYM_COMPILE_IN_TM_FALSE@	tm_proccomm.lo $(am__objects_3) \
@SYM_COMPILE_IN_TM_FALSE@	$(am__objects_4) $(am__objects_5) \
@SYM_COMPILE_IN_TM_FALSE@	$(am__objects_6) $(am__objects_7)
@SYM_COMPILE_IN_TM_TRUE@am__objects_8 = tm_func.lo tm_proccomm.lo \
@SYM_COMPILE_IN_TM_TRUE@	$(am__objects_3) $(am__objects_4) \
@SYM_COMPILE_IN_TM_TRUE@	$(am__objects_5) $(am__objects_6) \
@SYM_COMPILE_IN_TM_TRUE@	$(am__objects_7)
@SYM_COMPILE_IN_TM_TRUE@am__objects_9 = $(am__objects_8)
am__objects_10 = master.lo master_wrapper.lo master_io.lo \
	master_func.lo $(am__objects_2) $(am__objects_9)
am__objects_11 = timemeas.lo
am__objects_12 = qsortucb.lo qsortucb_i.lo qsortucb_ii.lo \
	qsortucb_id.lo qsortucb_di.lo qsortucb_ic.lo
am__objects_13 = proccomm.lo
am__objects_14 = pack_cut.lo
am__objects_15 = pack_array.lo
am__objects_16 = $(am__objects_10) $(am__objects_11) $(am__objects_12) \
	$(am__objects_13) $(am__objects_14) $(am__objects_15)
am_libSym_la_OBJECTS = $(am__objects_1) $(am__objects_16)
libSym_la_OBJECTS = $(am_libSym_la_OBJECTS)
libSymAppl_la_LIBADD =
am__libSymAppl_la_SOURCES_DIST = SymConfig.h BB_constants.h \
	BB_macros.h BB_types.h cg.h cg_params.h cg_u.h cp.h \
	cp_params.h cp_u.h dg.h dg_params.h dg_u.h lp.h lp_params.h \
	lp_solver.h lp_u.h master.h master_params.h master_u.h \
	messages.h pack_array.h pack_cut.h proccomm.h proto.h \
	qsortucb.h return_values.h symphony_api.h timemeas.h tm.h \
	tm_params.h master.c master_wrapper.c master_io.c \
	master_func.c lp_solver.c treemanager.c tm_func.c \
	tm_proccomm.c lp_varfunc.c lp_rowfunc.c lp_genfunc.c \
	lp_proccomm.c lp_wrapper.c lp_free.c lp_pseudo_branch.c \
	lp_branch.c cg_func.c cg_wrapper.c cp_proccomm.c cp_func.c \
	cp_wrapper.c timemeas.c qsortucb.c qsortucb_i.c qsortucb_ii.c \
	qsortucb_id.c qsortucb_di.c qsortucb_ic.c proccomm.c \
	pack_cut.c pack_array.c
@SYM_COMPILE_IN_LP_FALSE@am__objects_17 = libSymAppl_la-lp_solver.lo
@SYM_COMPILE_IN_LP_TRUE@am__objects_18 = libSymAppl_la-lp_solver.lo \
@SYM_COMPILE_IN_LP_TRUE@	libSymAppl_la-lp_varfunc.lo \
@SYM_COMPILE_IN_LP_TRUE@	libSymAppl_la-lp_rowfunc.lo \
@SYM_COMPILE_IN_LP_TRUE@	libSymAppl_la-lp_genfunc.lo \
@SYM_COMPILE_IN_LP_TRUE@	libSymAppl_la-lp_proccomm.lo \
@SYM_COMPILE_IN_LP_TRUE@	libSymAppl_la-lp_wrapper.lo \
@SYM_COMPILE_IN_LP_TRUE@	libSymAppl_la-lp_free.lo
@PSEUDO_COSTS_TRUE@@SYM_COMPILE_IN_LP_TRUE@am__objects_19 = libSymAppl_la-lp_pseudo_branch.lo
@PSEUDO_COSTS_FALSE@@SYM_COMPILE_IN_LP_TRUE@am__objects_20 = libSymAppl_la-lp_branch.lo
@SYM_COMPILE_IN_CG_TRUE@@SYM_COMPILE_IN_LP_TRUE@am__objects_21 = libSymAppl_la-cg_func.lo \
@SYM_COMPILE_IN_CG_TRUE@@SYM_COMPILE_IN_LP_TRUE@	libSymAppl_la-cg_wrapper.lo
@SYM_COMPILE_IN_CP_TRUE@am__objects_22 = libSymAppl_la-cp_proccomm.lo \
@SYM_COMPILE_IN_CP_TRUE@	libSymAppl_la-cp_func.lo \
@SYM_COMPILE_IN_CP_TRUE@	libSymAppl_la-cp_wrapper.lo
@SYM_COMPILE_IN_TM_FALSE@am__objects_23 =  \
@SYM_COMPILE_IN_TM_FALSE@	libSymAppl_la-treemanager.lo \
@SYM_COMPILE_IN_TM_FALSE@	libSymAppl_la-tm_func.lo \
@SYM_COMPILE_IN_TM_FALSE@	libSymAppl_la-tm_proccomm.lo \
@SYM_COMPILE_IN_TM_FALSE@	$(am__objects_18) $(am__objects_19) \
@SYM_COMPILE_IN_TM_FALSE@	$(am__objects_20) $(am__objects_21) \
@SYM_COMPILE_IN_TM_FALSE@	$(am__objects_22)
@SYM_COMPILE_IN_TM_TRUE@am__objects_23 = libSymAppl_la-tm_func.lo \
@SYM_COMPILE_IN_TM_TRUE@	libSymAppl_la-tm_proccomm.lo \
@SYM_COMPILE_IN_TM_TRUE@	$(am__objects_18) $(am__objects_19) \
@SYM_COMPILE_IN_TM_TRUE@	$(am__objects_20) $(am__objects_21) \
@SYM_COMPILE_IN_TM_TRUE@	$(am__objects_22)
@SYM_COMPILE_IN_TM_TRUE@am__objects_24 = $(am__objects_23)
am__objects_25 = libSymAppl_la-master.lo \
	libSymAppl_la-master_wrapper.lo libSymAppl_la-master_io.lo \
	libSymAppl_la-master_func.lo $(am__objects_17) \
	$(am__objects_24)
am__objects_26 = libSymAppl_la-timemeas.lo
am__objects_27 = libSymAppl_la-qsortucb.lo libSymAppl_la-qsortucb_i.lo \
	libSymAppl_la-qsortucb_ii.lo libSymAppl_la-qsortucb_id.lo \
	libSymAppl_la-qsortucb_di.lo libSymAppl_la-qsortucb_ic.lo
am__objects_28 = libSymAppl_la-proccomm.lo
am__objects_29 = libSymAppl_la-pack_cut.lo
am__objects_30 = libSymAppl_la-pack_array.lo
am__objects_31 = $(am__objects_25) $(am__objects_26) $(am__objects_27) \
	$(am__objects_28) $(am__objects_29) $(am__objects_30)
am__objects_32 = $(am__objects_1) $(am__objects_31)
@SYM_WITH_APPL_TRUE@am_libSymAppl_la_OBJECTS = $(am__objects_32)
libSymAppl_la_OBJECTS = $(am_libSymAppl_la_OBJECTS)
@SYM_WITH_APPL_TRUE@am_libSymAppl_la_rpath = -rpath $(libdir)
libSym_cg_la_LIBADD =
am__objects_33 = cut_gen.lo cg_proccomm.lo cg_func.lo cg_wrapper.lo
am__objects_34 = $(am__objects_33) $(am__objects_11) $(am__objects_12) \
	$(am__objects_13) $(am__objects_14)
am_libSym_cg_la_OBJECTS = $(am__objects_1) $(am__objects_34)
libSym_cg_la_OBJECTS = $(am_libSym_cg_la_OBJECTS)
libSym_cp_la_LIBADD =
am__objects_35 = cut_pool.lo cp_proccomm.lo cp_func.lo cp_wrapper.lo
am__objects_36 = $(am__objects_35) $(am__objects_11) $(am__objects_12) \
	$(am__objects_13) $(am__objects_14)
am_libSym_cp_la_OBJECTS = $(am__objects_1) $(am__objects_36)
libSym_cp_la_OBJECTS = $(am_libSym_cp_la_OBJECTS)
libSym_lp_la_LIBADD =
am__libSym_lp_la_SOURCES_DIST = SymConfig.h BB_constants.h BB_macros.h \
	BB_types.h cg.h cg_params.h cg_u.h cp.h cp_params.h cp_u.h \
	dg.h dg_params.h dg_u.h lp.h lp_params.h lp_solver.h lp_u.h \
	master.h master_params.h master_u.h messages.h pack_array.h \
	pack_cut.h proccomm.h proto.h qsortucb.h return_values.h \
	symphony_api.h timemeas.h tm.h tm_params.h lp_solver.c \
	lp_varfunc.c lp_rowfunc.c lp_genfunc.c lp_proccomm.c \
	lp_wrapper.c lp.c lp_free.c lp_pseudo_branch.c lp_branch.c \
	cg_func.c cg_wrapper.c timemeas.c qsortucb.c qsortucb_i.c \
	qsortucb_ii.c qsortucb_id.c qsortucb_di.c qsortucb_ic.c \
	proccomm.c pack_cut.c pack_array.c
@PSEUDO_COSTS_TRUE@am__objects_37 = lp_pseudo_branch.lo
@PSEUDO_COSTS_FALSE@am__objects_38 = lp_branch.lo
@SYM_COMPILE_IN_CG_TRUE@am__objects_39 = cg_func.lo cg_wrapper.lo
am__objects_40 = lp_solver.lo lp_varfunc.lo lp_rowfunc.lo \
	lp_genfunc.lo lp_proccomm.lo lp_wrapper.lo lp.lo lp_free.lo \
	$(am__objects_37) $(am__objects_38) $(am__objects_39)
am__objects_41 = $(am__objects_40) $(am__objects_11) $(am__objects_12) \
	$(am__objects_13) $(am__objects_14) $(am__objects_15)
am_libSym_lp_la_OBJECTS = $(am__objects_1) $(am__objects_41)
libSym_lp_la_OBJECTS = $(am_libSym_lp_la_OBJECTS)
libSym_lp_cg_la_LIBADD =
am__libSym_lp_cg_la_SOURCES_DIST = SymConfig.h BB_constants.h \
	BB_macros.h BB_types.h cg.h cg_params.h cg_u.h cp.h \
	cp_params.h cp_u.h dg.h dg_params.h dg_u.h lp.h lp_params.h \
	lp_solver.h lp_u.h master.h master_params.h master_u.h \
	messages.h pack_array.h pack_cut.h proccomm.h proto.h \
	qsortucb.h return_values.h symphony_api.h timemeas.h tm.h \
	tm_params.h lp_solver.c lp_varfunc.c lp_rowfunc.c lp_genfunc.c \
	lp_proccomm.c lp_wrapper.c lp.c lp_free.c lp_pseudo_branch.c \
	lp_branch.c cg_func.c cg_wrapper.c timemeas.c qsortucb.c \
	qsortucb_i.c qsortucb_ii.c qsortucb_id.c qsortucb_di.c \
	qsortucb_ic.c proccomm.c pack_cut.c pack_array.c
am_libSym_lp_cg_la_OBJECTS = $(am__objects_1) $(am__objects_41)
libSym_lp_cg_la_OBJECTS = $(am_libSym_lp_cg_la_OBJECTS)
libSym_m_tm_la_LIBADD =
am__libSym_m_tm_la_SOURCES_DIST = SymConfig.h BB_constants.h \
	BB_macros.h BB_types.h cg.h cg_params.h cg_u.h cp.h \
	cp_params.h cp_u.h dg.h dg_params.h dg_u.h lp.h lp_params.h \
	lp_solver.h lp_u.h master.h master_params.h master_u.h \
	messages.h pack_array.h pack_cut.h proccomm.h proto.h \
	qsortucb.h return_values.h symphony_api.h timemeas.h tm.h \
	tm_params.h master.c master_wrapper.c master_io.c \
	master_func.c lp_solver.c treemanager.c tm_func.c \
	tm_proccomm.c lp_varfunc.c lp_rowfunc.c lp_genfunc.c \
	lp_proccomm.c lp_wrapper.c lp_free.c lp_pseudo_branch.c \
	lp_branch.c cg_func.c cg_wrapper.c cp_proccomm.c cp_func.c \
	cp_wrapper.c timemeas.c qsortucb.c qsortucb_i.c qsortucb_ii.c \
	qsortucb_id.c qsortucb_di.c qsortucb_ic.c proccomm.c \
	pack_cut.c pack_array.c
am_libSym_m_tm_la_OBJECTS = $(am__objects_1) $(am__objects_16)
libSym_m_tm_la_OBJECTS = $(am_libSym_m_tm_la_OBJECTS)
libSym_m_tm_cp_la_LIBADD =
am__libSym_m_tm_cp_la_SOURCES_DIST = SymConfig.h BB_constants.h \
	BB_macros.h BB_types.h cg.h cg_params.h cg_u.h cp.h \
	cp_params.h cp_u.h dg.h dg_params.h dg_u.h lp.h lp_params.h \
	lp_solver.h lp_u.h master.h master_params.h master_u.h \
	messages.h pack_array.h pack_cut.h proccomm.h proto.h \
	qsortucb.h return_values.h symphony_api.h timemeas.h tm.h \
	tm_params.h master.c master_wrapper.c master_io.c \
	master_func.c lp_solver.c treemanager.c tm_func.c \
	tm_proccomm.c lp_varfunc.c lp_rowfunc.c lp_genfunc.c \
	lp_proccomm.c lp_wrapper.c lp_free.c lp_pseudo_branch.c \
	lp_branch.c cg_func.c cg_wrapper.c cp_proccomm.c cp_func.c \
	cp_wrapper.c timemeas.c qsortucb.c qsortucb_i.c qsortucb_ii.c \
	qsortucb_id.c qsortucb_di.c qsortucb_ic.c proccomm.c \
	pack_cut.c pack_array.c
am_libSym_m_tm_cp_la_OBJECTS = $(am__objects_1) $(am__objects_16)
libSym_m_tm_cp_la_OBJECTS = $(am_libSym_m_tm_cp_la_OBJECTS)
libSym_m_tm_lp_la_LIBADD =
am__libSym_m_tm_lp_la_SOURCES_DIST = SymConfig.h BB_constants.h \
	BB_macros.h BB_types.h cg.h cg_params.h cg_u.h cp.h \
	cp_params.h cp_u.h dg.h dg_params.h dg_u.h lp.h lp_params.h \
	lp_solver.h lp_u.h master.h master_params.h master_u.h \
	messages.h pack_array.h pack_cut.h proccomm.h proto.h \
	qsortucb.h return_values.h symphony_api.h timemeas.h tm.h \
	tm_params.h master.c master_wrapper.c master_io.c \
	master_func.c lp_solver.c treemanager.c tm_func.c \
	tm_proccomm.c lp_varfunc.c lp_rowfunc.c lp_genfunc.c \
	lp_proccomm.c lp_wrapper.c lp_free.c lp_pseudo_branch.c \
	lp_branch.c cg_func.c cg_wrapper.c cp_proccomm.c cp_func.c \
	cp_wrapper.c timemeas.c qsortucb.c qsortucb_i.c qsortucb_ii.c \
	qsortucb_id.c qsortucb_di.c qsortucb_ic.c proccomm.c \
	pack_cut.c pack_array.c
am_libSym_m_tm_lp_la_OBJECTS = $(am__objects_1) $(am__objects_16)
libSym_m_tm_lp_la_OBJECTS = $(am_libSym_m_tm_lp_la_OBJECTS)
libSym_m_tm_lp_cg_la_LIBADD =
am__libSym_m_tm_lp_cg_la_SOURCES_DIST = SymConfig.h BB_constants.h \
	BB_macros.h BB_types.h cg.h cg_params.h cg_u.h cp.h \
	cp_params.h cp_u.h dg.h dg_params.h dg_u.h lp.h lp_params.h \
	lp_solver.h lp_u.h master.h master_params.h master_u.h \
	messages.h pack_array.h pack_cut.h proccomm.h proto.h \
	qsortucb.h return_values.h symphony_api.h timemeas.h tm.h \
	tm_params.h master.c master_wrapper.c master_io.c \
	master_func.c lp_solver.c treemanager.c tm_func.c \
	tm_proccomm.c lp_varfunc.c lp_rowfunc.c lp_genfunc.c \
	lp_proccomm.c lp_wrapper.c lp_free.c lp_pseudo_branch.c \
	lp_branch.c cg_func.c cg_wrapper.c cp_proccomm.c cp_func.c \
	cp_wrapper.c timemeas.c qsortucb.c qsortucb_i.c qsortucb_ii.c \
	qsortucb_id.c qsortucb_di.c qsortucb_ic.c proccomm.c \
	pack_cut.c pack_array.c
am_libSym_m_tm_lp_cg_la_OBJECTS = $(am__objects_1) $(am__objects_16)
libSym_m_tm_lp_cg_la_OBJECTS = $(am_libSym_m_tm_lp_cg_la_OBJECTS)
libSym_m_tm_lp_cg_cp_la_LIBADD =
am__libSym_m_tm_lp_cg_cp_la_SOURCES_DIST = SymConfig.h BB_constants.h \
	BB_macros.h BB_types.h cg.h cg_params.h cg_u.h cp.h \
	cp_params.h cp_u.h dg.h dg_params.h dg_u.h lp.h lp_params.h \
	lp_solver.h lp_u.h master.h master_params.h master_u.h \
	messages.h pack_array.h pack_cut.h proccomm.h proto.h \
	qsortucb.h return_values.h symphony_api.h timemeas.h tm.h \
	tm_params.h master.c master_wrapper.c master_io.c \
	master_func.c lp_solver.c treemanager.c tm_func.c \
	tm_proccomm.c lp_varfunc.c lp_rowfunc.c lp_genfunc.c \
	lp_proccomm.c lp_wrapper.c lp_free.c lp_pseudo_branch.c \
	lp_branch.c cg_func.c cg_wrapper.c cp_proccomm.c cp_func.c \
	cp_wrapper.c timemeas.c qsortucb.c qsortucb_i.c qsortucb_ii.c \
	qsortucb_id.c qsortucb_di.c qsortucb_ic.c proccomm.c \
	pack_cut.c pack_array.c
am_libSym_m_tm_lp_cg_cp_la_OBJECTS = $(am__objects_1) \
	$(am__objects_16)
libSym_m_tm_lp_cg_cp_la_OBJECTS =  \
	$(am_libSym_m_tm_lp_cg_cp_la_OBJECTS)
libSym_tm_la_LIBADD =
am__libSym_tm_la_SOURCES_DIST = SymConfig.h BB_constants.h BB_macros.h \
	BB_types.h cg.h cg_params.h cg_u.h cp.h cp_params.h cp_u.h \
	dg.h dg_params.h dg_u.h lp.h lp_params.h lp_solver.h lp_u.h \
	master.h master_params.h master_u.h messages.h pack_array.h \
	pack_cut.h proccomm.h proto.h qsortucb.h return_values.h \
	symphony_api.h timemeas.h tm.h tm_params.h treemanager.c \
	tm_func.c tm_proccomm.c lp_solver.c lp_varfunc.c lp_rowfunc.c \
	lp_genfunc.c lp_proccomm.c lp_wrapper.c lp_free.c \
	lp_pseudo_branch.c lp_branch.c cg_func.c cg_wrapper.c \
	cp_proccomm.c cp_func.c cp_wrapper.c timemeas.c proccomm.c \
	pack_cut.c pack_array.c qsortucb.c qsortucb_i.c qsortucb_ii.c \
	qsortucb_id.c qsortucb_di.c qsortucb_ic.c
@SYM_COMPILE_IN_LP_TRUE@am__objects_42 = $(am__objects_12)
am__objects_43 = $(am__objects_8) $(am__objects_11) $(am__objects_13) \
	$(am__objects_14) $(am__objects_15) $(am__objects_42)
am_libSym_tm_la_OBJECTS = $(am__objects_1) $(am__objects_43)
libSym_tm_la_OBJECTS = $(am_libSym_tm_la_OBJECTS)
libSym_tm_cp_la_LIBADD =
am__libSym_tm_cp_la_SOURCES_DIST = SymConfig.h BB_constants.h \
	BB_macros.h BB_types.h cg.h cg_params.h cg_u.h cp.h \
	cp_params.h cp_u.h dg.h dg_params.h dg_u.h lp.h lp_params.h \
	lp_solver.h lp_u.h master.h master_params.h master_u.h \
	messages.h pack_array.h pack_cut.h proccomm.h proto.h \
	qsortucb.h return_values.h symphony_api.h timemeas.h tm.h \
	tm_params.h treemanager.c tm_func.c tm_proccomm.c lp_solver.c \
	lp_varfunc.c lp_rowfunc.c lp_genfunc.c lp_proccomm.c \
	lp_wrapper.c lp_free.c lp_pseudo_branch.c lp_branch.c \
	cg_func.c cg_wrapper.c cp_proccomm.c cp_func.c cp_wrapper.c \
	timemeas.c proccomm.c pack_cut.c pack_array.c qsortucb.c \
	qsortucb_i.c qsortucb_ii.c qsortucb_id.c qsortucb_di.c \
	qsortucb_ic.c
am_libSym_tm_cp_la_OBJECTS = $(am__objects_1) $(am__objects_43)
libSym_tm_cp_la_OBJECTS = $(am_libSym_tm_cp_la_OBJECTS)
libSym_tm_lp_la_LIBADD =
am__libSym_tm_lp_la_SOURCES_DIST = SymConfig.h BB_constants.h \
	BB_macros.h BB_types.h cg.h cg_params.h cg_u.h cp.h \
	cp_params.h cp_u.h dg.h dg_params.h dg_u.h lp.h lp_params.h \
	lp_solver.h lp_u.h master.h master_params.h master_u.h \
	messages.h pack_array.h pack_cut.h proccomm.h proto.h \
	qsortucb.h return_values.h symphony_api.h timemeas.h tm.h \
	tm_params.h treemanager.c tm_func.c tm_proccomm.c lp_solver.c \
	lp_varfunc.c lp_rowfunc.c lp_genfunc.c lp_proccomm.c \
	lp_wrapper.c lp_free.c lp_pseudo_branch.c lp_branch.c \
	cg_func.c cg_wrapper.c cp_proccomm.c cp_func.c cp_wrapper.c \
	timemeas.c proccomm.c pack_cut.c pack_array.c qsortucb.c \
	qsortucb_i.c qsortucb_ii.c qsortucb_id.c qsortucb_di.c \
	qsortucb_ic.c
am_libSym_tm_lp_la_OBJECTS = $(am__objects_1) $(am__objects_43)
libSym_tm_lp_la_OBJECTS = $(am_libSym_tm_lp_la_OBJECTS)
libSym_tm_lp_cg_la_LIBADD =
am__libSym_tm_lp_cg_la_SOURCES_DIST = SymConfig.h BB_constants.h \
	BB_macros.h BB_types.h cg.h cg_params.h cg_u.h cp.h \
	cp_params.h cp_u.h dg.h dg_params.h dg_u.h lp.h lp_params.h \
	lp_solver.h lp_u.h master.h master_params.h master_u.h \
	messages.h pack_array.h pack_cut.h proccomm.h proto.h \
	qsortucb.h return_values.h symphony_api.h timemeas.h tm.h \
	tm_params.h treemanager.c tm_func.c tm_proccomm.c lp_solver.c \
	lp_varfunc.c lp_rowfunc.c lp_genfunc.c lp_proccomm.c \
	lp_wrapper.c lp_free.c lp_pseudo_branch.c lp_branch.c \
	cg_func.c cg_wrapper.c cp_proccomm.c cp_func.c cp_wrapper.c \
	timemeas.c proccomm.c pack_cut.c pack_array.c qsortucb.c \
	qsortucb_i.c qsortucb_ii.c qsortucb_id.c qsortucb_di.c \
	qsortucb_ic.c
am_libSym_tm_lp_cg_la_OBJECTS = $(am__objects_1) $(am__objects_43)
libSym_tm_lp_cg_la_OBJECTS = $(am_libSym_tm_lp_cg_la_OBJECTS)
libSym_tm_lp_cg_cp_la_LIBADD =
am__libSym_tm_lp_cg_cp_la_SOURCES_DIST = SymConfig.h BB_constants.h \
	BB_macros.h BB_types.h cg.h cg_params.h cg_u.h cp.h \
	cp_params.h cp_u.h dg.h dg_params.h dg_u.h lp.h lp_params.h \
	lp_solver.h lp_u.h master.h master_params.h master_u.h \
	messages.h pack_array.h pack_cut.h proccomm.h proto.h \
	qsortucb.h return_values.h symphony_api.h timemeas.h tm.h \
	tm_params.h treemanager.c tm_func.c tm_proccomm.c lp_solver.c \
	lp_varfunc.c lp_rowfunc.c lp_genfunc.c lp_proccomm.c \
	lp_wrapper.c lp_free.c lp_pseudo_branch.c lp_branch.c \
	cg_func.c cg_wrapper.c cp_proccomm.c cp_func.c cp_wrapper.c \
	timemeas.c proccomm.c pack_cut.c pack_array.c qsortucb.c \
	qsortucb_i.c qsortucb_ii.c qsortucb_id.c qsortucb_di.c \
	qsortucb_ic.c
am_libSym_tm_lp_cg_cp_la_OBJECTS = $(am__objects_1) $(am__objects_43)
libSym_tm_lp_cg_cp_la_OBJECTS = $(am_libSym_tm_lp_cg_cp_la_OBJECTS)
am__EXEEXT_1 = @WHATTOMAKEBINS@
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__objects_44 = main.$(OBJEXT)
am__objects_45 = $(am__objects_44)
am_symphony_OBJECTS = $(am__objects_45)
symphony_OBJECTS = $(am_symphony_OBJECTS)
@USE_CGL_CUTS_TRUE@am__DEPENDENCIES_1 = $(CGLOBJDIR)/src/libCgl.la
@CLP_LP_SOLVER_TRUE@am__DEPENDENCIES_2 =  \
@CLP_LP_SOLVER_TRUE@	$(OSIOBJDIR)/src/OsiClp/libOsiClp.la \
@CLP_LP_SOLVER_TRUE@	$(CLPOBJDIR)/src/libClp.la
@CPLEX_LP_SOLVER_TRUE@am__DEPENDENCIES_3 =  \
@CPLEX_LP_SOLVER_TRUE@	$(OSIOBJDIR)/src/OsiCpx/libOsiCpx.la
@GLPK_LP_SOLVER_TRUE@am__DEPENDENCIES_4 =  \
@GLPK_LP_SOLVER_TRUE@	$(OSIOBJDIR)/src/OsiGlpk/libOsiGlpk.la
@OSL_LP_SOLVER_TRUE@am__DEPENDENCIES_5 =  \
@OSL_LP_SOLVER_TRUE@	$(OSIOBJDIR)/src/OsiOsl/libOsiOsl.la
@SOPLEX_LP_SOLVER_TRUE@am__DEPENDENCIES_6 =  \
@SOPLEX_LP_SOLVER_TRUE@	$(OSIOBJDIR)/src/OsiSpx/libOsiSpx.la
@XPRESS_LP_SOLVER_TRUE@am__DEPENDENCIES_7 =  \
@XPRESS_LP_SOLVER_TRUE@	$(OSIOBJDIR)/src/OsiXpr/libOsiXpr.la
am__DEPENDENCIES_8 =
am__DEPENDENCIES_9 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7) $(OSIOBJDIR)/src/libOsi.la \
	$(COINUTILSOBJDIR)/src/libCoinUtils.la $(am__DEPENDENCIES_8) \
	$(am__DEPENDENCIES_8)
symphony_DEPENDENCIES = libSym$(MASTEREXT).la $(am__DEPENDENCIES_9)
am_symphony_cp_OBJECTS =
symphony_cp_OBJECTS = $(am_symphony_cp_OBJECTS)
symphony_cp_DEPENDENCIES = libSym_cp.la $(am__DEPENDENCIES_9)
am_symphony_lp_OBJECTS =
symphony_lp_OBJECTS = $(am_symphony_lp_OBJECTS)
symphony_lp_DEPENDENCIES = libSym_lp$(LPEXT).la $(am__DEPENDENCIES_9)
am_symphony_lp_cg_OBJECTS =
symphony_lp_cg_OBJECTS = $(am_symphony_lp_cg_OBJECTS)
symphony_lp_cg_DEPENDENCIES = libSym_lp$(LPEXT).la \
	$(am__DEPENDENCIES_9)
am_symphony_lp_cg_cp_OBJECTS =
symphony_lp_cg_cp_OBJECTS = $(am_symphony_lp_cg_cp_OBJECTS)
symphony_lp_cg_cp_DEPENDENCIES = libSym_lp$(LPEXT).la \
	$(am__DEPENDENCIES_9)
am_symphony_m_tm_OBJECTS = $(am__objects_45)
symphony_m_tm_OBJECTS = $(am_symphony_m_tm_OBJECTS)
symphony_m_tm_DEPENDENCIES = libSym$(MASTEREXT).la \
	$(am__DEPENDENCIES_9)
am_symphony_m_tm_cp_OBJECTS = $(am__objects_45)
symphony_m_tm_cp_OBJECTS = $(am_symphony_m_tm_cp_OBJECTS)
symphony_m_tm_cp_DEPENDENCIES = libSym$(MASTEREXT).la \
	$(am__DEPENDENCIES_9)
am_symphony_m_tm_lp_OBJECTS = $(am__objects_45)
symphony_m_tm_lp_OBJECTS = $(am_symphony_m_tm_lp_OBJECTS)
symphony_m_tm_lp_DEPENDENCIES = libSym$(MASTEREXT).la \
	$(am__DEPENDENCIES_9)
am_symphony_m_tm_lp_cg_OBJECTS = $(am__objects_45)
symphony_m_tm_lp_cg_OBJECTS = $(am_symphony_m_tm_lp_cg_OBJECTS)
symphony_m_tm_lp_cg_DEPENDENCIES = libSym$(MASTEREXT).la \
	$(am__DEPENDENCIES_9)
am_symphony_m_tm_lp_cg_cp_OBJECTS = $(am__objects_45)
symphony_m_tm_lp_cg_cp_OBJECTS = $(am_symphony_m_tm_lp_cg_cp_OBJECTS)
symphony_m_tm_lp_cg_cp_DEPENDENCIES = libSym$(MASTEREXT).la \
	$(am__DEPENDENCIES_9)
am_symphony_tm_OBJECTS =
symphony_tm_OBJECTS = $(am_symphony_tm_OBJECTS)
symphony_tm_DEPENDENCIES = libSym_tm$(TMEXT).la $(am__DEPENDENCIES_9)
am_symphony_tm_cp_OBJECTS =
symphony_tm_cp_OBJECTS = $(am_symphony_tm_cp_OBJECTS)
symphony_tm_cp_DEPENDENCIES = libSym_tm$(TMEXT).la \
	$(am__DEPENDENCIES_9)
am_symphony_tm_lp_OBJECTS =
symphony_tm_lp_OBJECTS = $(am_symphony_tm_lp_OBJECTS)
symphony_tm_lp_DEPENDENCIES = libSym_tm$(TMEXT).la \
	$(am__DEPENDENCIES_9)
am_symphony_tm_lp_cg_OBJECTS =
symphony_tm_lp_cg_OBJECTS = $(am_symphony_tm_lp_cg_OBJECTS)
symphony_tm_lp_cg_DEPENDENCIES = libSym_tm$(TMEXT).la \
	$(am__DEPENDENCIES_9)
am_symphony_tm_lp_cg_cp_OBJECTS =
symphony_tm_lp_cg_cp_OBJECTS = $(am_symphony_tm_lp_cg_cp_OBJECTS)
symphony_tm_lp_cg_cp_DEPENDENCIES = libSym_tm$(TMEXT).la \
	$(am__DEPENDENCIES_9)
depcomp = $(SHELL) $(top_srcdir)/../depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
SOURCES = $(libSym_la_SOURCES) $(libSymAppl_la_SOURCES) \
	$(libSym_cg_la_SOURCES) $(libSym_cp_la_SOURCES) \
	$(libSym_lp_la_SOURCES) $(libSym_lp_cg_la_SOURCES) \
	$(libSym_m_tm_la_SOURCES) $(libSym_m_tm_cp_la_SOURCES) \
	$(libSym_m_tm_lp_la_SOURCES) $(libSym_m_tm_lp_cg_la_SOURCES) \
	$(libSym_m_tm_lp_cg_cp_la_SOURCES) $(libSym_tm_la_SOURCES) \
	$(libSym_tm_cp_la_SOURCES) $(libSym_tm_lp_la_SOURCES) \
	$(libSym_tm_lp_cg_la_SOURCES) $(libSym_tm_lp_cg_cp_la_SOURCES) \
	$(symphony_SOURCES) $(symphony_cp_SOURCES) \
	$(symphony_lp_SOURCES) $(symphony_lp_cg_SOURCES) \
	$(symphony_lp_cg_cp_SOURCES) $(symphony_m_tm_SOURCES) \
	$(symphony_m_tm_cp_SOURCES) $(symphony_m_tm_lp_SOURCES) \
	$(symphony_m_tm_lp_cg_SOURCES) \
	$(symphony_m_tm_lp_cg_cp_SOURCES) $(symphony_tm_SOURCES) \
	$(symphony_tm_cp_SOURCES) $(symphony_tm_lp_SOURCES) \
	$(symphony_tm_lp_cg_SOURCES) $(symphony_tm_lp_cg_cp_SOURCES)
DIST_SOURCES = $(am__libSym_la_SOURCES_DIST) \
	$(am__libSymAppl_la_SOURCES_DIST) $(libSym_cg_la_SOURCES) \
	$(libSym_cp_la_SOURCES) $(am__libSym_lp_la_SOURCES_DIST) \
	$(am__libSym_lp_cg_la_SOURCES_DIST) \
	$(am__libSym_m_tm_la_SOURCES_DIST) \
	$(am__libSym_m_tm_cp_la_SOURCES_DIST) \
	$(am__libSym_m_tm_lp_la_SOURCES_DIST) \
	$(am__libSym_m_tm_lp_cg_la_SOURCES_DIST) \
	$(am__libSym_m_tm_lp_cg_cp_la_SOURCES_DIST) \
	$(am__libSym_tm_la_SOURCES_DIST) \
	$(am__libSym_tm_cp_la_SOURCES_DIST) \
	$(am__libSym_tm_lp_la_SOURCES_DIST) \
	$(am__libSym_tm_lp_cg_la_SOURCES_DIST) \
	$(am__libSym_tm_lp_cg_cp_la_SOURCES_DIST) $(symphony_SOURCES) \
	$(symphony_cp_SOURCES) $(symphony_lp_SOURCES) \
	$(symphony_lp_cg_SOURCES) $(symphony_lp_cg_cp_SOURCES) \
	$(symphony_m_tm_SOURCES) $(symphony_m_tm_cp_SOURCES) \
	$(symphony_m_tm_lp_SOURCES) $(symphony_m_tm_lp_cg_SOURCES) \
	$(symphony_m_tm_lp_cg_cp_SOURCES) $(symphony_tm_SOURCES) \
	$(symphony_tm_cp_SOURCES) $(symphony_tm_lp_SOURCES) \
	$(symphony_tm_lp_cg_SOURCES) $(symphony_tm_lp_cg_cp_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
VPATH = $(SYMSOURCES)
ACLOCAL = @ACLOCAL@
ADDLIBS = @ADDLIBS@
ADD_CFLAGS = @ADD_CFLAGS@
ADD_CXXFLAGS = @ADD_CXXFLAGS@
ALWAYS_FALSE_FALSE = @ALWAYS_FALSE_FALSE@
ALWAYS_FALSE_TRUE = @ALWAYS_FALSE_TRUE@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
ARCH = @ARCH@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AUX_DIR = @AUX_DIR@
AWK = @AWK@
BUILDTOOLSDIR = @BUILDTOOLSDIR@
# Compile everything with g++
CC = $(CXX)
CCDEPMODE = @CCDEPMODE@
CDEFS = @CDEFS@
# Get rid of warning flags
#FIXME-Try to have the following later
#CFLAGS := $(subst $(COIN_WARNINGS), ,$(CFLAGS))
#CXXFLAGS := $(subst $(COIN_WARNINGS), ,$(CXXFLAGS))
CFLAGS := $(am__append_45) -pipe
CGLOBJDIR = @CGLOBJDIR@
CGLSRCDIR = @CGLSRCDIR@
CHECK_CUT_VALIDITY_FALSE = @CHECK_CUT_VALIDITY_FALSE@
CHECK_CUT_VALIDITY_TRUE = @CHECK_CUT_VALIDITY_TRUE@
CLPOBJDIR = @CLPOBJDIR@
CLPSRCDIR = @CLPSRCDIR@
CLP_LP_SOLVER_FALSE = @CLP_LP_SOLVER_FALSE@
CLP_LP_SOLVER_TRUE = @CLP_LP_SOLVER_TRUE@
COINUTILSOBJDIR = @COINUTILSOBJDIR@
COINUTILSSRCDIR = @COINUTILSSRCDIR@
COIN_HAS_CGL_FALSE = @COIN_HAS_CGL_FALSE@
COIN_HAS_CGL_TRUE = @COIN_HAS_CGL_TRUE@
COIN_HAS_CLP = @COIN_HAS_CLP@
COIN_HAS_CLP_FALSE = @COIN_HAS_CLP_FALSE@
COIN_HAS_CLP_TRUE = @COIN_HAS_CLP_TRUE@
COIN_HAS_COINUTILS_FALSE = @COIN_HAS_COINUTILS_FALSE@
COIN_HAS_COINUTILS_TRUE = @COIN_HAS_COINUTILS_TRUE@
COIN_HAS_CPX_FALSE = @COIN_HAS_CPX_FALSE@
COIN_HAS_CPX_TRUE = @COIN_HAS_CPX_TRUE@
COIN_HAS_GLPK_FALSE = @COIN_HAS_GLPK_FALSE@
COIN_HAS_GLPK_TRUE = @COIN_HAS_GLPK_TRUE@
COIN_HAS_OSI_FALSE = @COIN_HAS_OSI_FALSE@
COIN_HAS_OSI_TRUE = @COIN_HAS_OSI_TRUE@
COIN_HAS_OSL_FALSE = @COIN_HAS_OSL_FALSE@
COIN_HAS_OSL_TRUE = @COIN_HAS_OSL_TRUE@
COIN_HAS_READLINE_FALSE = @COIN_HAS_READLINE_FALSE@
COIN_HAS_READLINE_TRUE = @COIN_HAS_READLINE_TRUE@
COIN_HAS_SPX_FALSE = @COIN_HAS_SPX_FALSE@
COIN_HAS_SPX_TRUE = @COIN_HAS_SPX_TRUE@
COIN_HAS_XPR_FALSE = @COIN_HAS_XPR_FALSE@
COIN_HAS_XPR_TRUE = @COIN_HAS_XPR_TRUE@
COMPILE_FRAC_BRANCHING_FALSE = @COMPILE_FRAC_BRANCHING_FALSE@
COMPILE_FRAC_BRANCHING_TRUE = @COMPILE_FRAC_BRANCHING_TRUE@
CPEXT = @CPEXT@
CPLEX_LP_SOLVER_FALSE = @CPLEX_LP_SOLVER_FALSE@
CPLEX_LP_SOLVER_TRUE = @CPLEX_LP_SOLVER_TRUE@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CPXINCDIR = @CPXINCDIR@
CPXLIB = @CPXLIB@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEFS = @CXXDEFS@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS := $(CFLAGS)
CYGPATH_W = @CYGPATH_W@
DBG_CFLAGS = @DBG_CFLAGS@
DBG_CXXFLAGS = @DBG_CXXFLAGS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DO_TESTS_FALSE = @DO_TESTS_FALSE@
DO_TESTS_TRUE = @DO_TESTS_TRUE@
DRAWGRAPH_FALSE = @DRAWGRAPH_FALSE@
DRAWGRAPH_TRUE = @DRAWGRAPH_TRUE@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FADDLIBS = @FADDLIBS@
FFLAGS = @FFLAGS@
GLPKINCDIR = @GLPKINCDIR@
GLPKLIB = @GLPKLIB@
GLPK_LP_SOLVER_FALSE = @GLPK_LP_SOLVER_FALSE@
GLPK_LP_SOLVER_TRUE = @GLPK_LP_SOLVER_TRUE@
HAVE_EXTERNALS_FALSE = @HAVE_EXTERNALS_FALSE@
HAVE_EXTERNALS_TRUE = @HAVE_EXTERNALS_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBEXT = @LIBEXT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@ `cat $(OSIOBJDIR)/osi_addlibs.txt` `cat \
	$(COINUTILSOBJDIR)/coinutils_addlibs.txt` $(am__append_13) \
	$(am__append_16)
LIBTOOL = @LIBTOOL@
LIBTOOLM4 = @LIBTOOLM4@
LN_S = @LN_S@
LPEXT = @LPEXT@
LTLIBOBJS = @LTLIBOBJS@
LT_LDFLAGS = @LT_LDFLAGS@ -rpath $(libdir)
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MASTEREXT = @MASTEREXT@
MPICC = @MPICC@
MPICXX = @MPICXX@
OBJEXT = @OBJEXT@
OPT_CFLAGS = @OPT_CFLAGS@
OPT_CXXFLAGS = @OPT_CXXFLAGS@
OSIOBJDIR = @OSIOBJDIR@
OSISRCDIR = @OSISRCDIR@
OSLINCDIR = @OSLINCDIR@
OSLLIB = @OSLLIB@
OSL_LP_SOLVER_FALSE = @OSL_LP_SOLVER_FALSE@
OSL_LP_SOLVER_TRUE = @OSL_LP_SOLVER_TRUE@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PSEUDO_COSTS_FALSE = @PSEUDO_COSTS_FALSE@
PSEUDO_COSTS_TRUE = @PSEUDO_COSTS_TRUE@
RANLIB = @RANLIB@
ROOT_NODE_ONLY_FALSE = @ROOT_NODE_ONLY_FALSE@
ROOT_NODE_ONLY_TRUE = @ROOT_NODE_ONLY_TRUE@
RPATH_FLAGS = @RPATH_FLAGS@
SENSITIVITY_ANALYSIS_FALSE = @SENSITIVITY_ANALYSIS_FALSE@
SENSITIVITY_ANALYSIS_TRUE = @SENSITIVITY_ANALYSIS_TRUE@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SOPLEX_LP_SOLVER_FALSE = @SOPLEX_LP_SOLVER_FALSE@
SOPLEX_LP_SOLVER_TRUE = @SOPLEX_LP_SOLVER_TRUE@
SPXINCDIR = @SPXINCDIR@
SPXLIB = @SPXLIB@
STATISTICS_FALSE = @STATISTICS_FALSE@
STATISTICS_TRUE = @STATISTICS_TRUE@
STRIP = @STRIP@
SYMAPPLDIR = @SYMAPPLDIR@
SYMDEFS = @SYMDEFS@
SYMINCDIR = @SYMINCDIR@
SYMSRCDIR = @SYMSRCDIR@
SYM_COMPILE_IN_CG_FALSE = @SYM_COMPILE_IN_CG_FALSE@
SYM_COMPILE_IN_CG_TRUE = @SYM_COMPILE_IN_CG_TRUE@
SYM_COMPILE_IN_CP_FALSE = @SYM_COMPILE_IN_CP_FALSE@
SYM_COMPILE_IN_CP_TRUE = @SYM_COMPILE_IN_CP_TRUE@
SYM_COMPILE_IN_LP_FALSE = @SYM_COMPILE_IN_LP_FALSE@
SYM_COMPILE_IN_LP_TRUE = @SYM_COMPILE_IN_LP_TRUE@
SYM_COMPILE_IN_TM_FALSE = @SYM_COMPILE_IN_TM_FALSE@
SYM_COMPILE_IN_TM_TRUE = @SYM_COMPILE_IN_TM_TRUE@
SYM_DEBUG_FALSE = @SYM_DEBUG_FALSE@
SYM_DEBUG_TRUE = @SYM_DEBUG_TRUE@
SYM_PARALLEL_FALSE = @SYM_PARALLEL_FALSE@
SYM_PARALLEL_TRUE = @SYM_PARALLEL_TRUE@
SYM_WITH_APPL_FALSE = @SYM_WITH_APPL_FALSE@
SYM_WITH_APPL_TRUE = @SYM_WITH_APPL_TRUE@
TM_BASIS_TESTS_FALSE = @TM_BASIS_TESTS_FALSE@
TM_BASIS_TESTS_TRUE = @TM_BASIS_TESTS_TRUE@
TRACE_PATH_FALSE = @TRACE_PATH_FALSE@
TRACE_PATH_TRUE = @TRACE_PATH_TRUE@
USE_CGL_CUTS_FALSE = @USE_CGL_CUTS_FALSE@
USE_CGL_CUTS_TRUE = @USE_CGL_CUTS_TRUE@
USE_GMPL_FALSE = @USE_GMPL_FALSE@
USE_GMPL_TRUE = @USE_GMPL_TRUE@
USE_OSI_INTERFACE_FALSE = @USE_OSI_INTERFACE_FALSE@
USE_OSI_INTERFACE_TRUE = @USE_OSI_INTERFACE_TRUE@
VERSION = @VERSION@
VPATH_DISTCLEANFILES = @VPATH_DISTCLEANFILES@
WHATTOMAKEBINS = @WHATTOMAKEBINS@
WHATTOMAKELIBS = @WHATTOMAKELIBS@
XPRESS_LP_SOLVER_FALSE = @XPRESS_LP_SOLVER_FALSE@
XPRESS_LP_SOLVER_TRUE = @XPRESS_LP_SOLVER_TRUE@
XPRINCDIR = @XPRINCDIR@
XPRLIB = @XPRLIB@
abs_bin_dir = @abs_bin_dir@
abs_include_dir = @abs_include_dir@
abs_lib_dir = @abs_lib_dir@
abs_source_dir = @abs_source_dir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
have_autoconf = @have_autoconf@
have_automake = @have_automake@
have_svn = @have_svn@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
AUTOMAKE_OPTIONS = foreign
SUBDIRS = 
SYMSOURCES = \
	$(SYMSRCDIR)/Common      :\
	$(SYMSRCDIR)/LP          :\
	$(SYMSRCDIR)/CutGen      :\
	$(SYMSRCDIR)/CutPool     :\
	$(SYMSRCDIR)/DrawGraph   :\
	$(SYMSRCDIR)/Master      :\
	$(SYMSRCDIR)/../include     :\
	$(SYMSRCDIR)/ :\
	$(SYMSRCDIR)/TreeManager


##############################################################################
##############################################################################
# Global source files
##############################################################################
##############################################################################
SYMINCFILES = \
	SymConfig.h \
	BB_constants.h \
	BB_macros.h \
	BB_types.h \
	cg.h \
	cg_params.h \
	cg_u.h \
	cp.h \
	cp_params.h \
	cp_u.h \
	dg.h \
	dg_params.h \
	dg_u.h \
	lp.h \
	lp_params.h \
	lp_solver.h \
	lp_u.h \
	master.h \
	master_params.h \
	master_u.h \
	messages.h \
	pack_array.h \
	pack_cut.h \
	proccomm.h \
	proto.h \
	qsortucb.h \
	return_values.h \
	symphony_api.h \
	timemeas.h \
	tm.h \
	tm_params.h

MASTER_SRC = master.c master_wrapper.c master_io.c master_func.c \
	$(am__append_5) $(am__append_7)
MASTER_MAIN_SRC = main.c
DG_SRC = draw_graph.c
@SYM_COMPILE_IN_TM_FALSE@TM_SRC = treemanager.c tm_func.c \
@SYM_COMPILE_IN_TM_FALSE@	tm_proccomm.c $(am__append_1) \
@SYM_COMPILE_IN_TM_FALSE@	$(am__append_2) $(am__append_3) \
@SYM_COMPILE_IN_TM_FALSE@	$(am__append_4) $(am__append_6)
@SYM_COMPILE_IN_TM_TRUE@TM_SRC = tm_func.c tm_proccomm.c \
@SYM_COMPILE_IN_TM_TRUE@	$(am__append_1) $(am__append_2) \
@SYM_COMPILE_IN_TM_TRUE@	$(am__append_3) $(am__append_4) \
@SYM_COMPILE_IN_TM_TRUE@	$(am__append_6)
LP_SRC = lp_solver.c lp_varfunc.c lp_rowfunc.c lp_genfunc.c \
	lp_proccomm.c lp_wrapper.c lp.c lp_free.c $(am__append_8) \
	$(am__append_9) $(am__append_10)
CP_SRC = cut_pool.c cp_proccomm.c cp_func.c cp_wrapper.c
CG_SRC = cut_gen.c cg_proccomm.c cg_func.c cg_wrapper.c
QSORT_SRC = qsortucb.c qsortucb_i.c qsortucb_ii.c qsortucb_id.c \
		  qsortucb_di.c qsortucb_ic.c

TIME_SRC = timemeas.c
PROCCOMM_SRC = proccomm.c
PACKCUT_SRC = pack_cut.c
PACKARRAY_SRC = pack_array.c
BB_SRC = $(MASTER_SRC) $(DG_SRC) $(TM_SRC) $(LP_SRC) $(CP_SRC) $(CG_SRC) \
	 $(QSORT_SRC) $(TIME_SRC) $(PROCCOMM_SRC) $(PACKCUT_SRC) \
	 $(PACKARRAY_SRC)

ALL_SRC = $(BB_SRC)
ALL_MASTER = $(MASTER_SRC) $(TIME_SRC) $(QSORT_SRC) $(PROCCOMM_SRC) \
	$(PACKCUT_SRC) $(PACKARRAY_SRC)
ALL_LP = $(LP_SRC) $(TIME_SRC) $(QSORT_SRC) $(PROCCOMM_SRC) \
	$(PACKCUT_SRC) $(PACKARRAY_SRC)
ALL_TM = $(TM_SRC) $(TIME_SRC) $(PROCCOMM_SRC) $(PACKCUT_SRC) \
	$(PACKARRAY_SRC) $(am__append_11)
ALL_CG = $(CG_SRC) $(TIME_SRC) $(QSORT_SRC) $(PROCCOMM_SRC) \
	$(PACKCUT_SRC)
ALL_CP = $(CP_SRC) $(TIME_SRC) $(QSORT_SRC) $(PROCCOMM_SRC) \
	$(PACKCUT_SRC)
MAIN_SRC = $(MASTER_MAIN_SRC)
##############################################################################
#  Extensions and filenames for various configurations
##############################################################################

# if SYM_COMPILE_IN_CG
# LPEXT = _cg
# endif
# if SYM_COMPILE_IN_CP
# CPEXT = _cp
# endif
# if SYM_COMPILE_IN_LP
# TMEXT = _lp$(LPEXT)$(CPEXT)
# else
# TMEXT = $(CPEXT)
# endif
# if SYM_COMPILE_IN_TM
# MASTEREXT = _m_tm$(TMEXT)
# endif

# LIBNAME = Sym
# MASTERNAME = symphony

# if SYM_PARALLEL
# MASTERLIBNAME = $(LIBNAME)$(MASTEREXT)
# MASTERBIN = $(MASTERNAME)$(MASTEREXT)
# else
# MASTERLIBNAME = $(LIBNAME)
# MASTERBIN = $(MASTERNAME)
# endif

########################################################################
#                           Common Flags                               #
########################################################################

# Add include files

########################################################################
#                            Additional flags                          #
########################################################################

# Here list all include flags, relative to this "srcdir" directory.  This
# "cygpath" stuff is necessary to compile with native compilers on Windows.
# "top_srcdir" refers to the basic directory for the main package that is
# being compiled.
AM_CPPFLAGS = $(SYMDEFS) -I`$(CYGPATH_W) $(SYMINCDIR)` \
	$(am__append_14) $(am__append_17) $(am__append_19) \
	$(am__append_21) $(am__append_22) $(am__append_24) \
	$(am__append_26) $(am__append_28) -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src` -I`$(CYGPATH_W) $(CGLSRCDIR)/src/CglClique` \
	-I`$(CYGPATH_W) $(CGLSRCDIR)/src/CglDuplicateRow` \
	-I`$(CYGPATH_W) $(CGLSRCDIR)/src/CglFlowCover` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglGomory` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglKnapsackCover` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglLiftAndProject` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglMixedIntegerRounding` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglMixedIntegerRounding2` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglOddHole` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglPreProcess` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglProbing` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglRedSplit` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglSimpleRounding` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglTwomir` -I`$(CYGPATH_W) \
	$(COINUTILSSRCDIR)/src` -I`$(CYGPATH_W) \
	$(COINUTILSOBJDIR)/inc` -I`$(CYGPATH_W) $(OSISRCDIR)/src` \
	-I`$(CYGPATH_W) $(OSIOBJDIR)/inc` -I`$(CYGPATH_W) \
	$(CGLOBJDIR)/inc` $(am__append_30) $(am__append_31) \
	$(am__append_32) $(am__append_33) $(am__append_34) \
	$(am__append_35) $(am__append_36) $(am__append_37) \
	$(am__append_38) $(am__append_39) $(am__append_40) \
	$(am__append_41) $(am__append_42) $(am__append_43)

#LIBS += $(ADDLIBS)
LDADD = $(am__append_12) $(am__append_15) $(am__append_18) \
	$(am__append_20) $(am__append_23) $(am__append_25) \
	$(am__append_27) $(OSIOBJDIR)/src/libOsi.la \
	$(COINUTILSOBJDIR)/src/libCoinUtils.la $(am__append_29) \
	$(ADDLIBS)

# This line is necessary to allow VPATH compilation with MS compilers
# on Cygwin
DEFAULT_INCLUDES = -I. -I`$(CYGPATH_W) $(srcdir)` -I$(top_builddir)/inc

##############################################################################
##############################################################################
# What to make ? This has to go here in case the user has any targets.
##############################################################################
##############################################################################

# lib_LTLIBRARIES =

#WHATTOMAKELIBS =
#WHATTOMAKEBINS = 

# if SYM_COMPILE_IN_LP
# lib_LTLIBRARIES += lib$(LIBNAME)_lp$(LPEXT).la
# #WHATTOMAKEBINS += $(MASTERNAME)_lp$(LPEXT)
# endif

# if SYM_COMPILE_IN_CP
# lib_LTLIBRARIES += lib$(LIBNAME)_cp.la
# #WHATTOMAKEBINS += $(MASTERNAME)_cp
# endif

# if SYM_COMPILE_IN_CG
# lib_LTLIBRARIES += lib$(LIBNAME)_cg.la
# #WHATTOMAKEBINS += $(MASTERNAME)_cg
# endif

# if SYM_COMPILE_IN_TM
# lib_LTLIBRARIES += lib$(LIBNAME)_tm$(TMEXT).la
# #WHATTOMAKEBINS += $(MASTERNAME)_tm$(TMEXT)
# endif

# lib_LTLIBRARIES += lib$(MASTERLIBNAME).la
# #WHATTOMAKEBINS += $(MASTERNAME)

# if !SYM_COMPILE_IN_LP
# WHATTOMAKELIBS += lib$(LIBNAME)_lp$(LPEXT).la
# WHATTOMAKEBINS += $(MASTERNAME)_lp$(LPEXT)
# endif

# if !SYM_COMPILE_IN_CP
# WHATTOMAKELIBS += lib$(LIBNAME)_cp.la
# WHATTOMAKEBINS += $(MASTERNAME)_cp
# endif

# if !SYM_COMPILE_IN_CG
# WHATTOMAKELIBS += lib$(LIBNAME)_cg.la
# WHATTOMAKEBINS += $(MASTERNAME)_cg
# endif

# if !SYM_COMPILE_IN_TM
# WHATTOMAKELIBS += lib$(LIBNAME)_tm$(TMEXT).la
# WHATTOMAKEBINS += $(MASTERNAME)_tm$(TMEXT)
# endif

# WHATTOMAKELIBS += lib$(MASTERLIBNAME).la
# WHATTOMAKEBINS += $(MASTERNAME)

########################################################################
#                               libSym                                 #
########################################################################
EXTRA_LTLIBRARIES = libSym.la libSym_cg.la libSym_lp.la libSym_lp_cg.la \
	libSym_tm.la libSym_tm_lp.la libSym_tm_cp.la libSym_tm_lp_cg.la \
	libSym_tm_lp_cg_cp.la libSym_m_tm.la libSym_m_tm_lp.la \
	libSym_m_tm_cp.la libSym_m_tm_lp_cg.la libSym_m_tm_lp_cg_cp.la \
	libSym_cp.la 


#$(WHATTOMAKELIBS) $(WHATTOMAKEBINS)
#if !SYM_PARALLEL

# Name of the library compiled in this directory.  We want it to be installed
# in the 'lib' directory
lib_LTLIBRARIES = $(WHATTOMAKELIBS) $(am__append_44)
STATIC_LINK = $(LIBTOOL) --tag=CXX --mode=link $(CCLD) -static\
	$(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@


# List all source files for this library, including headers
libSym_la_SOURCES = $(SYMINCFILES) $(ALL_MASTER)
libSym_m_tm_la_SOURCES = $(SYMINCFILES) $(ALL_MASTER)
libSym_m_tm_lp_la_SOURCES = $(SYMINCFILES) $(ALL_MASTER)
libSym_m_tm_cp_la_SOURCES = $(SYMINCFILES) $(ALL_MASTER)
libSym_m_tm_lp_cg_la_SOURCES = $(SYMINCFILES) $(ALL_MASTER)
libSym_m_tm_lp_cg_cp_la_SOURCES = $(SYMINCFILES) $(ALL_MASTER)
libSym_lp_la_SOURCES = $(SYMINCFILES) $(ALL_LP)
libSym_lp_cg_la_SOURCES = $(SYMINCFILES) $(ALL_LP)
libSym_cg_la_SOURCES = $(SYMINCFILES) $(ALL_CG)
libSym_cp_la_SOURCES = $(SYMINCFILES) $(ALL_CP)
libSym_tm_la_SOURCES = $(SYMINCFILES) $(ALL_TM)
libSym_tm_lp_la_SOURCES = $(SYMINCFILES) $(ALL_TM)
libSym_tm_lp_cg_la_SOURCES = $(SYMINCFILES) $(ALL_TM)
libSym_tm_lp_cg_cp_la_SOURCES = $(SYMINCFILES) $(ALL_TM)
libSym_tm_cp_la_SOURCES = $(SYMINCFILES) $(ALL_TM)
libSym_lp_la_LINK = $(STATIC_LINK)
libSym_lp_cg_la_LINK = $(STATIC_LINK)
libSym_cg_la_LINK = $(STATIC_LINK)
libSym_cp_la_LINK = $(STATIC_LINK)
libSym_tm_la_LINK = $(STATIC_LINK)
libSym_tm_lp_la_LINK = $(STATIC_LINK)
libSym_tm_lp_cg_la_LINK = $(STATIC_LINK)
libSym_tm_lp_cg_cp_la_LINK = $(STATIC_LINK)
libSym_tm_cp_la_LINK = $(STATIC_LINK)

#nodist_libSym_la_SOURCES = dummy.cpp
libSym_la_LDFLAGS = $(LT_LDFLAGS) 
libSym_m_tm_la_LDFLAGS = $(LT_LDFLAGS)
libSym_m_tm_lp_la_LDFLAGS = $(LT_LDFLAGS)
libSym_m_tm_cp_la_LDFLAGS = $(LT_LDFLAGS)
libSym_m_tm_lp_cg_la_LDFLAGS = $(LT_LDFLAGS)
libSym_m_tm_lp_cg_cp_la_LDFLAGS = $(LT_LDFLAGS)
libSym_lp_la_LDFLAGS = $(LT_LDFLAGS)
libSym_lp_cg_la_LDFLAGS = $(LT_LDFLAGS)
libSym_cg_la_LDFLAGS = $(LT_LDFLAGS)
libSym_cp_la_LDFLAGS = $(LT_LDFLAGS)
libSym_tm_la_LDFLAGS = $(LT_LDFLAGS)
libSym_tm_lp_la_LDFLAGS = $(LT_LDFLAGS)
libSym_tm_lp_cg_la_LDFLAGS = $(LT_LDFLAGS)
libSym_tm_lp_cg_cp_la_LDFLAGS = $(LT_LDFLAGS)
libSym_tm_cp_la_LDFLAGS = $(LT_LDFLAGS)

# LDADD += libSym$(MASTEREXT).la
# LDFLAGS += -rpath $(libdir)

# # List all source files for this executable, including headers
symphony_SOURCES = $(MAIN_SRC) symphony_api.h
symphony_LDADD = libSym$(MASTEREXT).la $(LDADD)
symphony_LDFLAGS = -rpath $(libdir)
symphony_m_tm_SOURCES = $(MAIN_SRC) symphony_api.h
symphony_m_tm_LDADD = libSym$(MASTEREXT).la $(LDADD)
symphony_m_tm_LDFLAGS = -rpath $(libdir)
symphony_m_tm_lp_SOURCES = $(MAIN_SRC) symphony_api.h
symphony_m_tm_lp_LDADD = libSym$(MASTEREXT).la $(LDADD)
symphony_m_tm_lp_LDFLAGS = -rpath $(libdir)
symphony_m_tm_cp_SOURCES = $(MAIN_SRC) symphony_api.h
symphony_m_tm_cp_LDADD = libSym$(MASTEREXT).la $(LDADD)
symphony_m_tm_cp_LDFLAGS = -rpath $(libdir)
symphony_m_tm_lp_cg_SOURCES = $(MAIN_SRC) symphony_api.h
symphony_m_tm_lp_cg_LDADD = libSym$(MASTEREXT).la $(LDADD)
symphony_m_tm_lp_cg_LDFLAGS = -rpath $(libdir)
symphony_m_tm_lp_cg_cp_SOURCES = $(MAIN_SRC) symphony_api.h
symphony_m_tm_lp_cg_cp_LDADD = libSym$(MASTEREXT).la $(LDADD)
symphony_m_tm_lp_cg_cp_LDFLAGS = -rpath $(libdir)
symphony_tm_SOURCES = 
symphony_tm_LDADD = libSym_tm$(TMEXT).la $(LDADD)
symphony_tm_LDFLAGS = -rpath $(libdir)
symphony_tm_lp_SOURCES = 
symphony_tm_lp_LDADD = libSym_tm$(TMEXT).la $(LDADD)
symphony_tm_lp_LDFLAGS = -rpath $(libdir)
symphony_tm_cp_SOURCES = 
symphony_tm_cp_LDADD = libSym_tm$(TMEXT).la $(LDADD)
symphony_tm_cp_LDFLAGS = -rpath $(libdir)
symphony_tm_lp_cg_SOURCES = 
symphony_tm_lp_cg_LDADD = libSym_tm$(TMEXT).la $(LDADD)
symphony_tm_lp_cg_LDFLAGS = -rpath $(libdir)
symphony_tm_lp_cg_cp_SOURCES = 
symphony_tm_lp_cg_cp_LDADD = libSym_tm$(TMEXT).la $(LDADD)
symphony_tm_lp_cg_cp_LDFLAGS = -rpath $(libdir)
symphony_cp_SOURCES = 
symphony_cp_LDADD = libSym_cp.la $(LDADD)
symphony_cp_LDFLAGS = -rpath $(libdir)
symphony_lp_SOURCES = 
symphony_lp_LDADD = libSym_lp$(LPEXT).la $(LDADD)
symphony_lp_LDFLAGS = -rpath $(libdir)
symphony_lp_cg_SOURCES = 
symphony_lp_cg_LDADD = libSym_lp$(LPEXT).la $(LDADD)
symphony_lp_cg_LDFLAGS = -rpath $(libdir)
symphony_lp_cg_cp_SOURCES = 
symphony_lp_cg_cp_LDADD = libSym_lp$(LPEXT).la $(LDADD)
symphony_lp_cg_cp_LDFLAGS = -rpath $(libdir)
@SYM_WITH_APPL_TRUE@libSymAppl_la_SOURCES = $(libSym_la_SOURCES)
@SYM_WITH_APPL_TRUE@libSymAppl_la_CPPFLAGS = $(AM_CPPFLAGS) -DUSE_SYM_APPLICATION

# This is for libtool (on Windows)
@SYM_WITH_APPL_TRUE@libSymAppl_la_LDFLAGS = $(LT_LDFLAGS)
COIN_WARNINGS = -pedantic-errors -Wimplicit -Wparentheses -Wreturn-type -Wcast-qual -Wall -Wpointer-arith -Wwrite-strings -Wconversion
CCLD = $(CXX)
# Link with g++
LINK = $(LIBTOOL) --tag=CXX --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@


########################################################################
#                Headers that need to be installed                     #
########################################################################

# Here list all the header files that are required by a user of the library,
# and that therefore should be installed in 'install'

# They are already in include dir. 

# include_HEADERS = \
# 	../include/config_sym.h \
# 	../include/symphony_api.h

#############################################################################
# Create the Config.h file that always defines HAVE_CONFIG_H and install it #
#############################################################################

# You only need to adapt the following line
ConfigHeader = SymConfig.h

# It is already defined in include dir. 

# install-exec-local:
# 	echo "#ifndef HAVE_CONFIG_H" >bla
# 	echo "#define HAVE_CONFIG_H" >>bla
# 	echo "#endif" >> bla
# 	cat $(includedir)/$(ConfigHeader) >> bla
# 	$(install_sh_DATA) bla $(DESTDIR)$(includedir)/$(ConfigHeader)
# 	rm -f bla

# uninstall-local:
# 	rm -f $(DESTDIR)$(includedir)/$(ConfigHeader)
CLEANFILES = dummy.cpp
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libSym.la: $(libSym_la_OBJECTS) $(libSym_la_DEPENDENCIES) 
	$(LINK)  $(libSym_la_LDFLAGS) $(libSym_la_OBJECTS) $(libSym_la_LIBADD) $(LIBS)
libSymAppl.la: $(libSymAppl_la_OBJECTS) $(libSymAppl_la_DEPENDENCIES) 
	$(LINK) $(am_libSymAppl_la_rpath) $(libSymAppl_la_LDFLAGS) $(libSymAppl_la_OBJECTS) $(libSymAppl_la_LIBADD) $(LIBS)
libSym_cg.la: $(libSym_cg_la_OBJECTS) $(libSym_cg_la_DEPENDENCIES) 
	$(libSym_cg_la_LINK)  $(libSym_cg_la_LDFLAGS) $(libSym_cg_la_OBJECTS) $(libSym_cg_la_LIBADD) $(LIBS)
libSym_cp.la: $(libSym_cp_la_OBJECTS) $(libSym_cp_la_DEPENDENCIES) 
	$(libSym_cp_la_LINK)  $(libSym_cp_la_LDFLAGS) $(libSym_cp_la_OBJECTS) $(libSym_cp_la_LIBADD) $(LIBS)
libSym_lp.la: $(libSym_lp_la_OBJECTS) $(libSym_lp_la_DEPENDENCIES) 
	$(libSym_lp_la_LINK)  $(libSym_lp_la_LDFLAGS) $(libSym_lp_la_OBJECTS) $(libSym_lp_la_LIBADD) $(LIBS)
libSym_lp_cg.la: $(libSym_lp_cg_la_OBJECTS) $(libSym_lp_cg_la_DEPENDENCIES) 
	$(libSym_lp_cg_la_LINK)  $(libSym_lp_cg_la_LDFLAGS) $(libSym_lp_cg_la_OBJECTS) $(libSym_lp_cg_la_LIBADD) $(LIBS)
libSym_m_tm.la: $(libSym_m_tm_la_OBJECTS) $(libSym_m_tm_la_DEPENDENCIES) 
	$(LINK)  $(libSym_m_tm_la_LDFLAGS) $(libSym_m_tm_la_OBJECTS) $(libSym_m_tm_la_LIBADD) $(LIBS)
libSym_m_tm_cp.la: $(libSym_m_tm_cp_la_OBJECTS) $(libSym_m_tm_cp_la_DEPENDENCIES) 
	$(LINK)  $(libSym_m_tm_cp_la_LDFLAGS) $(libSym_m_tm_cp_la_OBJECTS) $(libSym_m_tm_cp_la_LIBADD) $(LIBS)
libSym_m_tm_lp.la: $(libSym_m_tm_lp_la_OBJECTS) $(libSym_m_tm_lp_la_DEPENDENCIES) 
	$(LINK)  $(libSym_m_tm_lp_la_LDFLAGS) $(libSym_m_tm_lp_la_OBJECTS) $(libSym_m_tm_lp_la_LIBADD) $(LIBS)
libSym_m_tm_lp_cg.la: $(libSym_m_tm_lp_cg_la_OBJECTS) $(libSym_m_tm_lp_cg_la_DEPENDENCIES) 
	$(LINK)  $(libSym_m_tm_lp_cg_la_LDFLAGS) $(libSym_m_tm_lp_cg_la_OBJECTS) $(libSym_m_tm_lp_cg_la_LIBADD) $(LIBS)
libSym_m_tm_lp_cg_cp.la: $(libSym_m_tm_lp_cg_cp_la_OBJECTS) $(libSym_m_tm_lp_cg_cp_la_DEPENDENCIES) 
	$(LINK)  $(libSym_m_tm_lp_cg_cp_la_LDFLAGS) $(libSym_m_tm_lp_cg_cp_la_OBJECTS) $(libSym_m_tm_lp_cg_cp_la_LIBADD) $(LIBS)
libSym_tm.la: $(libSym_tm_la_OBJECTS) $(libSym_tm_la_DEPENDENCIES) 
	$(libSym_tm_la_LINK)  $(libSym_tm_la_LDFLAGS) $(libSym_tm_la_OBJECTS) $(libSym_tm_la_LIBADD) $(LIBS)
libSym_tm_cp.la: $(libSym_tm_cp_la_OBJECTS) $(libSym_tm_cp_la_DEPENDENCIES) 
	$(libSym_tm_cp_la_LINK)  $(libSym_tm_cp_la_LDFLAGS) $(libSym_tm_cp_la_OBJECTS) $(libSym_tm_cp_la_LIBADD) $(LIBS)
libSym_tm_lp.la: $(libSym_tm_lp_la_OBJECTS) $(libSym_tm_lp_la_DEPENDENCIES) 
	$(libSym_tm_lp_la_LINK)  $(libSym_tm_lp_la_LDFLAGS) $(libSym_tm_lp_la_OBJECTS) $(libSym_tm_lp_la_LIBADD) $(LIBS)
libSym_tm_lp_cg.la: $(libSym_tm_lp_cg_la_OBJECTS) $(libSym_tm_lp_cg_la_DEPENDENCIES) 
	$(libSym_tm_lp_cg_la_LINK)  $(libSym_tm_lp_cg_la_LDFLAGS) $(libSym_tm_lp_cg_la_OBJECTS) $(libSym_tm_lp_cg_la_LIBADD) $(LIBS)
libSym_tm_lp_cg_cp.la: $(libSym_tm_lp_cg_cp_la_OBJECTS) $(libSym_tm_lp_cg_cp_la_DEPENDENCIES) 
	$(libSym_tm_lp_cg_cp_la_LINK)  $(libSym_tm_lp_cg_cp_la_LDFLAGS) $(libSym_tm_lp_cg_cp_la_OBJECTS) $(libSym_tm_lp_cg_cp_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
symphony$(EXEEXT): $(symphony_OBJECTS) $(symphony_DEPENDENCIES) 
	@rm -f symphony$(EXEEXT)
	$(LINK) $(symphony_LDFLAGS) $(symphony_OBJECTS) $(symphony_LDADD) $(LIBS)
symphony_cp$(EXEEXT): $(symphony_cp_OBJECTS) $(symphony_cp_DEPENDENCIES) 
	@rm -f symphony_cp$(EXEEXT)
	$(LINK) $(symphony_cp_LDFLAGS) $(symphony_cp_OBJECTS) $(symphony_cp_LDADD) $(LIBS)
symphony_lp$(EXEEXT): $(symphony_lp_OBJECTS) $(symphony_lp_DEPENDENCIES) 
	@rm -f symphony_lp$(EXEEXT)
	$(LINK) $(symphony_lp_LDFLAGS) $(symphony_lp_OBJECTS) $(symphony_lp_LDADD) $(LIBS)
symphony_lp_cg$(EXEEXT): $(symphony_lp_cg_OBJECTS) $(symphony_lp_cg_DEPENDENCIES) 
	@rm -f symphony_lp_cg$(EXEEXT)
	$(LINK) $(symphony_lp_cg_LDFLAGS) $(symphony_lp_cg_OBJECTS) $(symphony_lp_cg_LDADD) $(LIBS)
symphony_lp_cg_cp$(EXEEXT): $(symphony_lp_cg_cp_OBJECTS) $(symphony_lp_cg_cp_DEPENDENCIES) 
	@rm -f symphony_lp_cg_cp$(EXEEXT)
	$(LINK) $(symphony_lp_cg_cp_LDFLAGS) $(symphony_lp_cg_cp_OBJECTS) $(symphony_lp_cg_cp_LDADD) $(LIBS)
symphony_m_tm$(EXEEXT): $(symphony_m_tm_OBJECTS) $(symphony_m_tm_DEPENDENCIES) 
	@rm -f symphony_m_tm$(EXEEXT)
	$(LINK) $(symphony_m_tm_LDFLAGS) $(symphony_m_tm_OBJECTS) $(symphony_m_tm_LDADD) $(LIBS)
symphony_m_tm_cp$(EXEEXT): $(symphony_m_tm_cp_OBJECTS) $(symphony_m_tm_cp_DEPENDENCIES) 
	@rm -f symphony_m_tm_cp$(EXEEXT)
	$(LINK) $(symphony_m_tm_cp_LDFLAGS) $(symphony_m_tm_cp_OBJECTS) $(symphony_m_tm_cp_LDADD) $(LIBS)
symphony_m_tm_lp$(EXEEXT): $(symphony_m_tm_lp_OBJECTS) $(symphony_m_tm_lp_DEPENDENCIES) 
	@rm -f symphony_m_tm_lp$(EXEEXT)
	$(LINK) $(symphony_m_tm_lp_LDFLAGS) $(symphony_m_tm_lp_OBJECTS) $(symphony_m_tm_lp_LDADD) $(LIBS)
symphony_m_tm_lp_cg$(EXEEXT): $(symphony_m_tm_lp_cg_OBJECTS) $(symphony_m_tm_lp_cg_DEPENDENCIES) 
	@rm -f symphony_m_tm_lp_cg$(EXEEXT)
	$(LINK) $(symphony_m_tm_lp_cg_LDFLAGS) $(symphony_m_tm_lp_cg_OBJECTS) $(symphony_m_tm_lp_cg_LDADD) $(LIBS)
symphony_m_tm_lp_cg_cp$(EXEEXT): $(symphony_m_tm_lp_cg_cp_OBJECTS) $(symphony_m_tm_lp_cg_cp_DEPENDENCIES) 
	@rm -f symphony_m_tm_lp_cg_cp$(EXEEXT)
	$(LINK) $(symphony_m_tm_lp_cg_cp_LDFLAGS) $(symphony_m_tm_lp_cg_cp_OBJECTS) $(symphony_m_tm_lp_cg_cp_LDADD) $(LIBS)
symphony_tm$(EXEEXT): $(symphony_tm_OBJECTS) $(symphony_tm_DEPENDENCIES) 
	@rm -f symphony_tm$(EXEEXT)
	$(LINK) $(symphony_tm_LDFLAGS) $(symphony_tm_OBJECTS) $(symphony_tm_LDADD) $(LIBS)
symphony_tm_cp$(EXEEXT): $(symphony_tm_cp_OBJECTS) $(symphony_tm_cp_DEPENDENCIES) 
	@rm -f symphony_tm_cp$(EXEEXT)
	$(LINK) $(symphony_tm_cp_LDFLAGS) $(symphony_tm_cp_OBJECTS) $(symphony_tm_cp_LDADD) $(LIBS)
symphony_tm_lp$(EXEEXT): $(symphony_tm_lp_OBJECTS) $(symphony_tm_lp_DEPENDENCIES) 
	@rm -f symphony_tm_lp$(EXEEXT)
	$(LINK) $(symphony_tm_lp_LDFLAGS) $(symphony_tm_lp_OBJECTS) $(symphony_tm_lp_LDADD) $(LIBS)
symphony_tm_lp_cg$(EXEEXT): $(symphony_tm_lp_cg_OBJECTS) $(symphony_tm_lp_cg_DEPENDENCIES) 
	@rm -f symphony_tm_lp_cg$(EXEEXT)
	$(LINK) $(symphony_tm_lp_cg_LDFLAGS) $(symphony_tm_lp_cg_OBJECTS) $(symphony_tm_lp_cg_LDADD) $(LIBS)
symphony_tm_lp_cg_cp$(EXEEXT): $(symphony_tm_lp_cg_cp_OBJECTS) $(symphony_tm_lp_cg_cp_DEPENDENCIES) 
	@rm -f symphony_tm_lp_cg_cp$(EXEEXT)
	$(LINK) $(symphony_tm_lp_cg_cp_LDFLAGS) $(symphony_tm_lp_cg_cp_OBJECTS) $(symphony_tm_lp_cg_cp_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cg_func.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cg_proccomm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cg_wrapper.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cp_func.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cp_proccomm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cp_wrapper.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cut_gen.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cut_pool.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-cg_func.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-cg_wrapper.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-cp_func.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-cp_proccomm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-cp_wrapper.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-lp_branch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-lp_free.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-lp_genfunc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-lp_proccomm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-lp_pseudo_branch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-lp_rowfunc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-lp_solver.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-lp_varfunc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-lp_wrapper.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-master.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-master_func.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-master_io.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-master_wrapper.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-pack_array.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-pack_cut.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-proccomm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-qsortucb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-qsortucb_di.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-qsortucb_i.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-qsortucb_ic.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-qsortucb_id.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-qsortucb_ii.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-timemeas.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-tm_func.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-tm_proccomm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSymAppl_la-treemanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lp_branch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lp_free.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lp_genfunc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lp_proccomm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lp_pseudo_branch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lp_rowfunc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lp_solver.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lp_varfunc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lp_wrapper.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/master.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/master_func.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/master_io.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/master_wrapper.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pack_array.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pack_cut.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/proccomm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qsortucb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qsortucb_di.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qsortucb_i.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qsortucb_ic.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qsortucb_id.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qsortucb_ii.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timemeas.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tm_func.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tm_proccomm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/treemanager.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

libSymAppl_la-master.lo: master.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-master.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-master.Tpo" -c -o libSymAppl_la-master.lo `test -f 'master.c' || echo '$(srcdir)/'`master.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-master.Tpo" "$(DEPDIR)/libSymAppl_la-master.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-master.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='master.c' object='libSymAppl_la-master.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-master.lo `test -f 'master.c' || echo '$(srcdir)/'`master.c

libSymAppl_la-master_wrapper.lo: master_wrapper.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-master_wrapper.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-master_wrapper.Tpo" -c -o libSymAppl_la-master_wrapper.lo `test -f 'master_wrapper.c' || echo '$(srcdir)/'`master_wrapper.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-master_wrapper.Tpo" "$(DEPDIR)/libSymAppl_la-master_wrapper.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-master_wrapper.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='master_wrapper.c' object='libSymAppl_la-master_wrapper.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-master_wrapper.lo `test -f 'master_wrapper.c' || echo '$(srcdir)/'`master_wrapper.c

libSymAppl_la-master_io.lo: master_io.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-master_io.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-master_io.Tpo" -c -o libSymAppl_la-master_io.lo `test -f 'master_io.c' || echo '$(srcdir)/'`master_io.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-master_io.Tpo" "$(DEPDIR)/libSymAppl_la-master_io.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-master_io.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='master_io.c' object='libSymAppl_la-master_io.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-master_io.lo `test -f 'master_io.c' || echo '$(srcdir)/'`master_io.c

libSymAppl_la-master_func.lo: master_func.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-master_func.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-master_func.Tpo" -c -o libSymAppl_la-master_func.lo `test -f 'master_func.c' || echo '$(srcdir)/'`master_func.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-master_func.Tpo" "$(DEPDIR)/libSymAppl_la-master_func.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-master_func.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='master_func.c' object='libSymAppl_la-master_func.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-master_func.lo `test -f 'master_func.c' || echo '$(srcdir)/'`master_func.c

libSymAppl_la-lp_solver.lo: lp_solver.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-lp_solver.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-lp_solver.Tpo" -c -o libSymAppl_la-lp_solver.lo `test -f 'lp_solver.c' || echo '$(srcdir)/'`lp_solver.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-lp_solver.Tpo" "$(DEPDIR)/libSymAppl_la-lp_solver.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-lp_solver.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lp_solver.c' object='libSymAppl_la-lp_solver.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-lp_solver.lo `test -f 'lp_solver.c' || echo '$(srcdir)/'`lp_solver.c

libSymAppl_la-treemanager.lo: treemanager.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-treemanager.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-treemanager.Tpo" -c -o libSymAppl_la-treemanager.lo `test -f 'treemanager.c' || echo '$(srcdir)/'`treemanager.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-treemanager.Tpo" "$(DEPDIR)/libSymAppl_la-treemanager.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-treemanager.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='treemanager.c' object='libSymAppl_la-treemanager.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-treemanager.lo `test -f 'treemanager.c' || echo '$(srcdir)/'`treemanager.c

libSymAppl_la-tm_func.lo: tm_func.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-tm_func.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-tm_func.Tpo" -c -o libSymAppl_la-tm_func.lo `test -f 'tm_func.c' || echo '$(srcdir)/'`tm_func.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-tm_func.Tpo" "$(DEPDIR)/libSymAppl_la-tm_func.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-tm_func.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='tm_func.c' object='libSymAppl_la-tm_func.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-tm_func.lo `test -f 'tm_func.c' || echo '$(srcdir)/'`tm_func.c

libSymAppl_la-tm_proccomm.lo: tm_proccomm.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-tm_proccomm.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-tm_proccomm.Tpo" -c -o libSymAppl_la-tm_proccomm.lo `test -f 'tm_proccomm.c' || echo '$(srcdir)/'`tm_proccomm.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-tm_proccomm.Tpo" "$(DEPDIR)/libSymAppl_la-tm_proccomm.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-tm_proccomm.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='tm_proccomm.c' object='libSymAppl_la-tm_proccomm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-tm_proccomm.lo `test -f 'tm_proccomm.c' || echo '$(srcdir)/'`tm_proccomm.c

libSymAppl_la-lp_varfunc.lo: lp_varfunc.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-lp_varfunc.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-lp_varfunc.Tpo" -c -o libSymAppl_la-lp_varfunc.lo `test -f 'lp_varfunc.c' || echo '$(srcdir)/'`lp_varfunc.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-lp_varfunc.Tpo" "$(DEPDIR)/libSymAppl_la-lp_varfunc.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-lp_varfunc.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lp_varfunc.c' object='libSymAppl_la-lp_varfunc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-lp_varfunc.lo `test -f 'lp_varfunc.c' || echo '$(srcdir)/'`lp_varfunc.c

libSymAppl_la-lp_rowfunc.lo: lp_rowfunc.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-lp_rowfunc.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-lp_rowfunc.Tpo" -c -o libSymAppl_la-lp_rowfunc.lo `test -f 'lp_rowfunc.c' || echo '$(srcdir)/'`lp_rowfunc.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-lp_rowfunc.Tpo" "$(DEPDIR)/libSymAppl_la-lp_rowfunc.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-lp_rowfunc.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lp_rowfunc.c' object='libSymAppl_la-lp_rowfunc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-lp_rowfunc.lo `test -f 'lp_rowfunc.c' || echo '$(srcdir)/'`lp_rowfunc.c

libSymAppl_la-lp_genfunc.lo: lp_genfunc.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-lp_genfunc.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-lp_genfunc.Tpo" -c -o libSymAppl_la-lp_genfunc.lo `test -f 'lp_genfunc.c' || echo '$(srcdir)/'`lp_genfunc.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-lp_genfunc.Tpo" "$(DEPDIR)/libSymAppl_la-lp_genfunc.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-lp_genfunc.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lp_genfunc.c' object='libSymAppl_la-lp_genfunc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-lp_genfunc.lo `test -f 'lp_genfunc.c' || echo '$(srcdir)/'`lp_genfunc.c

libSymAppl_la-lp_proccomm.lo: lp_proccomm.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-lp_proccomm.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-lp_proccomm.Tpo" -c -o libSymAppl_la-lp_proccomm.lo `test -f 'lp_proccomm.c' || echo '$(srcdir)/'`lp_proccomm.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-lp_proccomm.Tpo" "$(DEPDIR)/libSymAppl_la-lp_proccomm.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-lp_proccomm.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lp_proccomm.c' object='libSymAppl_la-lp_proccomm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-lp_proccomm.lo `test -f 'lp_proccomm.c' || echo '$(srcdir)/'`lp_proccomm.c

libSymAppl_la-lp_wrapper.lo: lp_wrapper.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-lp_wrapper.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-lp_wrapper.Tpo" -c -o libSymAppl_la-lp_wrapper.lo `test -f 'lp_wrapper.c' || echo '$(srcdir)/'`lp_wrapper.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-lp_wrapper.Tpo" "$(DEPDIR)/libSymAppl_la-lp_wrapper.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-lp_wrapper.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lp_wrapper.c' object='libSymAppl_la-lp_wrapper.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-lp_wrapper.lo `test -f 'lp_wrapper.c' || echo '$(srcdir)/'`lp_wrapper.c

libSymAppl_la-lp_free.lo: lp_free.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-lp_free.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-lp_free.Tpo" -c -o libSymAppl_la-lp_free.lo `test -f 'lp_free.c' || echo '$(srcdir)/'`lp_free.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-lp_free.Tpo" "$(DEPDIR)/libSymAppl_la-lp_free.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-lp_free.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lp_free.c' object='libSymAppl_la-lp_free.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-lp_free.lo `test -f 'lp_free.c' || echo '$(srcdir)/'`lp_free.c

libSymAppl_la-lp_pseudo_branch.lo: lp_pseudo_branch.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-lp_pseudo_branch.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-lp_pseudo_branch.Tpo" -c -o libSymAppl_la-lp_pseudo_branch.lo `test -f 'lp_pseudo_branch.c' || echo '$(srcdir)/'`lp_pseudo_branch.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-lp_pseudo_branch.Tpo" "$(DEPDIR)/libSymAppl_la-lp_pseudo_branch.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-lp_pseudo_branch.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lp_pseudo_branch.c' object='libSymAppl_la-lp_pseudo_branch.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-lp_pseudo_branch.lo `test -f 'lp_pseudo_branch.c' || echo '$(srcdir)/'`lp_pseudo_branch.c

libSymAppl_la-lp_branch.lo: lp_branch.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-lp_branch.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-lp_branch.Tpo" -c -o libSymAppl_la-lp_branch.lo `test -f 'lp_branch.c' || echo '$(srcdir)/'`lp_branch.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-lp_branch.Tpo" "$(DEPDIR)/libSymAppl_la-lp_branch.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-lp_branch.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lp_branch.c' object='libSymAppl_la-lp_branch.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-lp_branch.lo `test -f 'lp_branch.c' || echo '$(srcdir)/'`lp_branch.c

libSymAppl_la-cg_func.lo: cg_func.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-cg_func.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-cg_func.Tpo" -c -o libSymAppl_la-cg_func.lo `test -f 'cg_func.c' || echo '$(srcdir)/'`cg_func.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-cg_func.Tpo" "$(DEPDIR)/libSymAppl_la-cg_func.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-cg_func.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='cg_func.c' object='libSymAppl_la-cg_func.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-cg_func.lo `test -f 'cg_func.c' || echo '$(srcdir)/'`cg_func.c

libSymAppl_la-cg_wrapper.lo: cg_wrapper.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-cg_wrapper.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-cg_wrapper.Tpo" -c -o libSymAppl_la-cg_wrapper.lo `test -f 'cg_wrapper.c' || echo '$(srcdir)/'`cg_wrapper.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-cg_wrapper.Tpo" "$(DEPDIR)/libSymAppl_la-cg_wrapper.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-cg_wrapper.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='cg_wrapper.c' object='libSymAppl_la-cg_wrapper.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-cg_wrapper.lo `test -f 'cg_wrapper.c' || echo '$(srcdir)/'`cg_wrapper.c

libSymAppl_la-cp_proccomm.lo: cp_proccomm.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-cp_proccomm.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-cp_proccomm.Tpo" -c -o libSymAppl_la-cp_proccomm.lo `test -f 'cp_proccomm.c' || echo '$(srcdir)/'`cp_proccomm.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-cp_proccomm.Tpo" "$(DEPDIR)/libSymAppl_la-cp_proccomm.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-cp_proccomm.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='cp_proccomm.c' object='libSymAppl_la-cp_proccomm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-cp_proccomm.lo `test -f 'cp_proccomm.c' || echo '$(srcdir)/'`cp_proccomm.c

libSymAppl_la-cp_func.lo: cp_func.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-cp_func.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-cp_func.Tpo" -c -o libSymAppl_la-cp_func.lo `test -f 'cp_func.c' || echo '$(srcdir)/'`cp_func.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-cp_func.Tpo" "$(DEPDIR)/libSymAppl_la-cp_func.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-cp_func.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='cp_func.c' object='libSymAppl_la-cp_func.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-cp_func.lo `test -f 'cp_func.c' || echo '$(srcdir)/'`cp_func.c

libSymAppl_la-cp_wrapper.lo: cp_wrapper.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-cp_wrapper.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-cp_wrapper.Tpo" -c -o libSymAppl_la-cp_wrapper.lo `test -f 'cp_wrapper.c' || echo '$(srcdir)/'`cp_wrapper.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-cp_wrapper.Tpo" "$(DEPDIR)/libSymAppl_la-cp_wrapper.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-cp_wrapper.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='cp_wrapper.c' object='libSymAppl_la-cp_wrapper.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-cp_wrapper.lo `test -f 'cp_wrapper.c' || echo '$(srcdir)/'`cp_wrapper.c

libSymAppl_la-timemeas.lo: timemeas.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-timemeas.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-timemeas.Tpo" -c -o libSymAppl_la-timemeas.lo `test -f 'timemeas.c' || echo '$(srcdir)/'`timemeas.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-timemeas.Tpo" "$(DEPDIR)/libSymAppl_la-timemeas.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-timemeas.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='timemeas.c' object='libSymAppl_la-timemeas.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-timemeas.lo `test -f 'timemeas.c' || echo '$(srcdir)/'`timemeas.c

libSymAppl_la-qsortucb.lo: qsortucb.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-qsortucb.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-qsortucb.Tpo" -c -o libSymAppl_la-qsortucb.lo `test -f 'qsortucb.c' || echo '$(srcdir)/'`qsortucb.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-qsortucb.Tpo" "$(DEPDIR)/libSymAppl_la-qsortucb.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-qsortucb.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='qsortucb.c' object='libSymAppl_la-qsortucb.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-qsortucb.lo `test -f 'qsortucb.c' || echo '$(srcdir)/'`qsortucb.c

libSymAppl_la-qsortucb_i.lo: qsortucb_i.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-qsortucb_i.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-qsortucb_i.Tpo" -c -o libSymAppl_la-qsortucb_i.lo `test -f 'qsortucb_i.c' || echo '$(srcdir)/'`qsortucb_i.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-qsortucb_i.Tpo" "$(DEPDIR)/libSymAppl_la-qsortucb_i.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-qsortucb_i.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='qsortucb_i.c' object='libSymAppl_la-qsortucb_i.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-qsortucb_i.lo `test -f 'qsortucb_i.c' || echo '$(srcdir)/'`qsortucb_i.c

libSymAppl_la-qsortucb_ii.lo: qsortucb_ii.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-qsortucb_ii.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-qsortucb_ii.Tpo" -c -o libSymAppl_la-qsortucb_ii.lo `test -f 'qsortucb_ii.c' || echo '$(srcdir)/'`qsortucb_ii.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-qsortucb_ii.Tpo" "$(DEPDIR)/libSymAppl_la-qsortucb_ii.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-qsortucb_ii.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='qsortucb_ii.c' object='libSymAppl_la-qsortucb_ii.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-qsortucb_ii.lo `test -f 'qsortucb_ii.c' || echo '$(srcdir)/'`qsortucb_ii.c

libSymAppl_la-qsortucb_id.lo: qsortucb_id.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-qsortucb_id.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-qsortucb_id.Tpo" -c -o libSymAppl_la-qsortucb_id.lo `test -f 'qsortucb_id.c' || echo '$(srcdir)/'`qsortucb_id.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-qsortucb_id.Tpo" "$(DEPDIR)/libSymAppl_la-qsortucb_id.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-qsortucb_id.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='qsortucb_id.c' object='libSymAppl_la-qsortucb_id.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-qsortucb_id.lo `test -f 'qsortucb_id.c' || echo '$(srcdir)/'`qsortucb_id.c

libSymAppl_la-qsortucb_di.lo: qsortucb_di.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-qsortucb_di.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-qsortucb_di.Tpo" -c -o libSymAppl_la-qsortucb_di.lo `test -f 'qsortucb_di.c' || echo '$(srcdir)/'`qsortucb_di.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-qsortucb_di.Tpo" "$(DEPDIR)/libSymAppl_la-qsortucb_di.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-qsortucb_di.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='qsortucb_di.c' object='libSymAppl_la-qsortucb_di.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-qsortucb_di.lo `test -f 'qsortucb_di.c' || echo '$(srcdir)/'`qsortucb_di.c

libSymAppl_la-qsortucb_ic.lo: qsortucb_ic.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-qsortucb_ic.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-qsortucb_ic.Tpo" -c -o libSymAppl_la-qsortucb_ic.lo `test -f 'qsortucb_ic.c' || echo '$(srcdir)/'`qsortucb_ic.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-qsortucb_ic.Tpo" "$(DEPDIR)/libSymAppl_la-qsortucb_ic.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-qsortucb_ic.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='qsortucb_ic.c' object='libSymAppl_la-qsortucb_ic.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-qsortucb_ic.lo `test -f 'qsortucb_ic.c' || echo '$(srcdir)/'`qsortucb_ic.c

libSymAppl_la-proccomm.lo: proccomm.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-proccomm.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-proccomm.Tpo" -c -o libSymAppl_la-proccomm.lo `test -f 'proccomm.c' || echo '$(srcdir)/'`proccomm.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-proccomm.Tpo" "$(DEPDIR)/libSymAppl_la-proccomm.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-proccomm.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='proccomm.c' object='libSymAppl_la-proccomm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-proccomm.lo `test -f 'proccomm.c' || echo '$(srcdir)/'`proccomm.c

libSymAppl_la-pack_cut.lo: pack_cut.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-pack_cut.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-pack_cut.Tpo" -c -o libSymAppl_la-pack_cut.lo `test -f 'pack_cut.c' || echo '$(srcdir)/'`pack_cut.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-pack_cut.Tpo" "$(DEPDIR)/libSymAppl_la-pack_cut.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-pack_cut.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pack_cut.c' object='libSymAppl_la-pack_cut.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-pack_cut.lo `test -f 'pack_cut.c' || echo '$(srcdir)/'`pack_cut.c

libSymAppl_la-pack_array.lo: pack_array.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libSymAppl_la-pack_array.lo -MD -MP -MF "$(DEPDIR)/libSymAppl_la-pack_array.Tpo" -c -o libSymAppl_la-pack_array.lo `test -f 'pack_array.c' || echo '$(srcdir)/'`pack_array.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libSymAppl_la-pack_array.Tpo" "$(DEPDIR)/libSymAppl_la-pack_array.Plo"; else rm -f "$(DEPDIR)/libSymAppl_la-pack_array.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pack_array.c' object='libSymAppl_la-pack_array.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSymAppl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libSymAppl_la-pack_array.lo `test -f 'pack_array.c' || echo '$(srcdir)/'`pack_array.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLTLIBRARIES

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
